[
  {
    "path": "posts/2022-05-18-tidyverse/",
    "title": "How to scrape olx",
    "description": "scrape olx India website to get used car price data",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2022-05-18",
    "categories": [],
    "contents": "\nWebscraping olx\n\n\n\nFigure 1: scraping olx website for cars\n\n\n\nEveryone has or will consider buying a car for various reasons. As\nfor me, browsing through olx is a hobby and a\npassion that has been a part of my weekend fix for quite sometime now.\nMeaningless browsing through classifieds although joyful, does not help\nus understand trends and patterns. Therefore, I decided to occasionally\nscrape the olx website for used car prices and make visualizations from\nthe same. The primary objective was to have fun, and also grab some good\ndeals when they present themselves.\n\n\nlibrary(tidyverse)\nlibrary(httr)\nlibrary(rvest)\nlibrary(here)\n\n\n\nIn the first step, we load up the packages “tidyverse”, “httr”, and\n“rvest” to make sure that all the functions we call will work\nseamlessly. Now, I present to you the function “olxfind”.\n\n\nolxfind<- function(area,yearstart, yearend, make){\n  \n    link <- paste0(\"https://www.olx.in/\",area,\"/cars_c84?filter=first_owner_eq_1%2Cmake_eq_\",make,\"%2Cyear_between_\",yearstart,\"_to_\",yearend)\n    page<- link |> session() |> read_html() # It is important to create a session first or else you may get a 403 error\n    prices<- page |> html_nodes(\"._3GOwr\") |> html_text()\n    prices\n    yearmileage<- page |> html_nodes(\".KFHpP\") |> html_text()\n    carname<<- page |> html_nodes(\"._4aNdc\") |> html_text()\n    yearmileage\n    # pic <- page |> html_attrs(\"img\")\n    polo<<- tibble(prices, yearmileage, carname)\n    polo1<<- polo |> separate(yearmileage, into= c(\"year\", \"mileage\"), sep = \" - \") |> \n      mutate(mileage = str_remove_all(mileage,  pattern = \"km\")) |> \n      mutate(mileage = str_remove_all(mileage,  pattern = \"\\\\.+0\")) |> \n      mutate(mileage = str_remove_all(mileage,  pattern = \"[:punct:]\")) |> \n      mutate(prices = str_remove_all(prices,  pattern = \"[:punct:]\")) |> \n      separate(prices, into = c(\"symbol\", \"prices\"), sep = \" \") |> \n      select(year, mileage, prices, carname) |> \n      mutate(across(c(1:3), as.numeric))\nreturn(polo1)\n}\nolxfind(area= \"dehradun_g4059236\", yearstart = \"2014\", yearend = \"2020\",make = \"volkswagen\")\n\n\n# A tibble: 40 × 4\n    year mileage prices carname         \n   <dbl>   <dbl>  <dbl> <chr>           \n 1  2016   79000 600000 Volkswagen Vento\n 2  2014   52000 395000 Volkswagen GTI  \n 3  2014   55000 385000 Volkswagen Polo \n 4  2016   31690 450000 Volkswagen Polo \n 5  2018   38000 700000 Volkswagen Vento\n 6  2014   65823 420000 Volkswagen Polo \n 7  2017   45000 550000 Volkswagen Ameo \n 8  2018   24000 625000 Volkswagen Polo \n 9  2020   27000 790000 Volkswagen Polo \n10  2019   35000 535000 Volkswagen Polo \n# … with 30 more rows\n\npolo1<- olxfind(area= \"dehradun_g4059236\", yearstart = \"2014\", yearend = \"2020\",make = \"volkswagen\")\nclass(polo1)\n\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nglimpse(polo1)\n\n\nRows: 40\nColumns: 4\n$ year    <dbl> 2014, 2016, 2014, 2016, 2018, 2014, 2017, 2018, 2020…\n$ mileage <dbl> 52000, 79000, 55000, 31690, 38000, 65823, 45000, 240…\n$ prices  <dbl> 395000, 600000, 385000, 450000, 700000, 420000, 5500…\n$ carname <chr> \"Volkswagen GTI\", \"Volkswagen Vento\", \"Volkswagen Po…\n\npolo1<- as_tibble(polo1)\n\n\n\nThis function takes the following arguments( all strings) i.e., area,\nyearstart & yearend, and make.\nArea\nArea is one of the most important arguments for this function. You\nneed to tweak specify this argument accurately, if you want to get\narea-specific results. As shown in the function definition for olxfind,\nyou can see that all the arguments used are primarily for the purpose of\ncreating the pagelink that will be used to scrape the site.\nTherefore, before running the function, you should ideally visit olx and from the area button, select the area of\nyour choice. then from the url you will have to copy the string\nspecifying the region of your choice in the function argument. for\nexample, if I use only “dehradun” for the area argument, we will get a\nerror. Since olx adds Dehradun as “dehradun_g4059236”, you need to\nspecify that in the area argument. Suppose, you want to search for cars\nin delhi region then the link for olx becomes “https://www.olx.in/delhi_g4058659/cars_c84”. In this\ncase, the area code for delhi is “delhi_g4058659”, you need to specify\nthat in ther argument call for area.\nProduct\nNotice that the product call is “cars_c84”, which is already there in\nthe link so you do not need to modify that from within the function. In\ncase, you are interested in motorcycles(“motorcycles_c81”), or\nmobile-phones(“mobile-phones_c1453”).\nYear\nYou can also filter the cars based on the year of manufacture. This\nwill certainly help you narrow down to the relevant results and filter\nthe unnecessary information. Although year is a numeric variable, for\nthe purposes of this function it is a string since its pasted into a\nstring to form a link so make sure you write “2014” rather than 2014 in\nthe function argument.\nMake\nThe Olx website provides you the option to select cars from various\nmanufacturers. In olxfind you can get data for only one car manufacturer\nat a time. You can save the data from each call with the name of the\nmanufacturer as a separate column and then use “dplyr::bind_rows” to\njoin them together. This will ensure that you get the maximum number of\nlistings from each manufacturer.\nOther limitations of this\nfunction\nRight now, this function cannot be used to parse more than 40\nentries, because of the design of the Olx website. If someone has any\nidea how to get all data points and bypass the “load more” button please\nshare your insights in the comments section. I am also looking into the\npossibility of downloading the images associated with each data point to\nthe database. In its present form, the function requires users to tweak\na number of things if they want to look for other product types. Later,\nI might add some other conditional statements that will link with the\n“product” argument and create the relevant page links for users.\nVisualization\nNow that we have the data at hand, we can probably create some\nexploratory visualizations from them to better understand the trends and\npatterns.\n\n\nlibrary(plotly)\n# names(polo1)\nplot1<- polo1 |> \n  mutate(year = as.factor(year)) |> \n  ggplot(aes(x = year, y = prices, group = year)) +\n   geom_violin(aes(alpha = 0.001), show.legend = FALSE)+\n  geom_boxplot(aes()) +\n  geom_jitter(aes(colour = mileage)) +\n  stat_summary(fun=mean, geom=\"point\", shape=5, size=4)+\n  scale_y_continuous(n.breaks = 10) +\n  theme_bw() \n#plot1\nplotly::ggplotly(plot1)\n\n\n\n\nThis graph reveals that there is some overalp between the used car\nprices across year of manufacturing. This can be attributed to factors\nlike the model variant, number of previous owners and the colour of the\ncar. However, that is a topic for another day, in this case we will make\ndo with only the variables we hae at our disposal. Let’s draw another\ngraph by summarizing the mean prices and mileage of each car grouped by\nthe years.\n\n\npolo1 |>  mutate(year = as.factor(year)) |> \n  group_by(year) |> summarise(prices = mean(prices)) |> kableExtra::kbl() |> kableExtra::kable_styling(position = \"center\")\n\n\n\nyear\n\n\nprices\n\n\n2014\n\n\n416363.6\n\n\n2015\n\n\n498000.0\n\n\n2016\n\n\n498571.4\n\n\n2017\n\n\n473222.2\n\n\n2018\n\n\n590000.0\n\n\n2019\n\n\n490000.0\n\n\n2020\n\n\n855000.0\n\n\nIn this next plot we create a summary of the mean prices of used VW\ncars across the years of 2014-2019. We find that there is a sharp\ndecrease in the prices of used VW cars after the first three years.\nThere is negligible difference between the mean prices of cars that are\nsix or seven years old. But there is an appreciable drop in car prices\nwhen the age is eight years. The biggest drop in prices occur when the\ncar becomes three year old, whcih leads to roughly 50% decrease in\nvalue. The next drop in value occurs, when the car becomes more than\nfive years old. The car can be found at its lowest value from eight year\nonwards.\n\n\npolo1 |>  mutate(year = as.factor(year)) |> \n  group_by(year) |> \n   summarise(pricesm = round(mean(prices),2), mileagem = mean(mileage)) |> \n  ggplot(aes(x = year, y = pricesm)) +\n  geom_col()+\n  geom_label(aes(label = pricesm))\n\n\n\n\nIf you are looking for a used VW car, it might be better to go for\ncars older than four years.\nCompare with other car\nmanufacturers\nNow that we have covered the VW cars, a question arises in my mind.\nHow does the value-retention of VW cars compare to that of honda cars or\nHyundai or suzuki for that matter. We can compare across the three major\ncar manufacturers and see whose car holds the most value in the used car\nmarket over the years. First we need to download the relevant data for\neach manufacturer. Since we already have the “olxfind” function, we will\nonly need to change the name of the manufacturer and keep everything\nelse the same.\n\n\npolo1<- olxfind(area= \"dehradun_g4059236\", yearstart = \"2012\", yearend = \"2020\",make = \"volkswagen\")\nhonda<- olxfind(area= \"dehradun_g4059236\", yearstart = \"2012\", yearend = \"2020\",make = \"cars-honda\")\nglimpse(honda)\n\n\nRows: 40\nColumns: 4\n$ year    <dbl> 2016, 2014, 2017, 2019, 2014, 2018, 2017, 2013, 2018…\n$ mileage <dbl> 52000, 82000, 46852, 16100, 1, 55000, 16300, 58000, …\n$ prices  <dbl> 725000, 500000, 660000, 725000, 480000, 700000, 5350…\n$ carname <chr> \"Honda City\", \"Honda City\", \"Honda BR-V\", \"Honda Ama…\n\nsuzuki<-olxfind(area= \"dehradun_g4059236\", yearstart = \"2012\", yearend = \"2020\",make = \"maruti-suzuki\")\nglimpse(suzuki)\n\n\nRows: 40\nColumns: 4\n$ year    <dbl> 2015, 2017, 2019, 2018, 2017, 2017, 2018, 2019, 2018…\n$ mileage <dbl> 63328, 39549, 22000, 50000, 20800, 22000, 29000, 130…\n$ prices  <dbl> 520000, 425000, 625000, 370000, 625000, 325000, 4300…\n$ carname <chr> \"Maruti Suzuki Swift Dzire\", \"Maruti Suzuki Wagon R\"…\n\n# toyota<-olxfind(area= \"dehradun_g4059236\", yearstart = \"2012\", yearend = \"2020\",make = \"toyota\")\n# glimpse(toyota)\n\n\n\nNow we have four dataframes named after each car manufacturer and we\nneed to join them together by the rows. But before doing that, we need\nto ensure that we add a column called manufacturer to each data frame so\nthat once they are joined we can tell them apart.\n\n\nhonda<- honda |> mutate(manufacturer = \"honda\")\npolo1<- polo1 |> mutate(manufacturer = \"VW\")\nsuzuki<- suzuki |> mutate(manufacturer = \"suzuki\")\n#toyota<- toyota |> mutate(manufacturer = \"toyota\")\n# I know I should have written a function for it or a loop\nglimpse(honda)\n\n\nRows: 40\nColumns: 5\n$ year         <dbl> 2016, 2014, 2017, 2019, 2014, 2018, 2017, 2013,…\n$ mileage      <dbl> 52000, 82000, 46852, 16100, 1, 55000, 16300, 58…\n$ prices       <dbl> 725000, 500000, 660000, 725000, 480000, 700000,…\n$ carname      <chr> \"Honda City\", \"Honda City\", \"Honda BR-V\", \"Hond…\n$ manufacturer <chr> \"honda\", \"honda\", \"honda\", \"honda\", \"honda\", \"h…\n\nNow lets join all the four data sets with the bind_rows command from\ndplyr.\n\n\n# Now we shall bind all the four data frames by their rows\njoineddata<- bind_rows(honda, polo1, suzuki)\n\n\n\nBefore proceeding we will check that all the car manufacturers are\nthere.\n\n\njoineddata<- joineddata |> mutate(across(where(is.character), as.factor))\njoineddata|> group_by(carname, manufacturer) |> \n  summarise(prices = mean(prices),\n            count = n()) |>\n  ggplot(aes(y = carname, x = prices, label = count)) +\n  geom_col() +\n  geom_label() +\n  facet_wrap(~manufacturer)\n\n\n\n\nSome of the cars are more expensive than others. We can notice that\nthe Honda WR-V, and\nNow that we have the data of all four car manufacturers, we can\ncreate some comparative visualisations that will help us answer some\nquestions about value-retention in the used car market.\n\n\nplot2<- joineddata |> \n  mutate(year = as.factor(year)) |> \n  group_by(year, manufacturer) |> \n  summarise(prices = mean(prices), \n            mileage = mean(mileage),\n            count = n()) |> \n  mutate(prices = round(prices,1))  |> \n  ggplot(aes(x = year, y = prices, label = count)) +\n  geom_col(aes(fill = manufacturer), position = \"dodge\") +\n  coord_flip()+\n  scale_y_continuous(n.breaks = 10) +\n  theme(legend.position = \"bottom\") \n#  geom_label(aes(label = prices), nudge_y = 300, check_overlap = TRUE)\nggplotly(plot2)\n\n\n\n\n\n\nplot2<- joineddata |> \n  mutate(year = as.factor(year)) |> \n  group_by(year, carname) |> \n  summarise(prices = mean(prices), \n            mileage = mean(mileage),\n            count = n()) |> \n  mutate(prices = round(prices,1)) |> \n  filter(carname %in% c(\"Volkswagen Polo\", \"Honda City\", \"Maruti Suzuki Swift\", \"Maruti Suzuki Swift Dzire\", \"Honda Amaze\", \"Volkswagen Ameo\")) |> \n  ggplot(aes(x = year, y = prices, label = count)) +\n  geom_col(aes(fill = carname), position = \"dodge\") +\n  coord_flip()+\n  scale_y_continuous(n.breaks = 10) +\n  theme(legend.position = \"bottom\") \n#  geom_label(aes(label = prices), nudge_y = 300, check_overlap = TRUE)\nggplotly(plot2)\n\n\n\n\nThis is very interesting! We can see that the honda cars are more\nexpensive than the suzuki and VW cars even after three years. This is\nprobably because Honda only sells more expensive and premium models as\ncompared to suzuki and Volkswagen. As we move through the years, we can\nsee that the suzuki and VW cars show the sharpest decline in the first\nfive years. Then something strange happens, the prices of six and seven\nyear old suzuki and VW cars are more than five year old offerings. In\nfact, six year old cars cost as much as three-year old cars. This is\nprobably due to some disparity in the data wherein, most of the\nhigher-end variants and models are listed after five years. On the other\nhand, most people listing their used cars after three years are listing\nlower level variants. If we compare this data along with that of used\nhonda cars, it is evident that the prices of Honda cars decrease\nsteadily in the used car market and therefore are more predictable than\nVW and suzuki cars.\nKeep this in mind when choosing your next used vehicle. I hope you\nfound this article insightful. If you have any suggestions please feel\nfree to share the same in the comments section.\n\n\nlibrary(RSelenium)\n\n\n\n\n\n\n",
    "preview": "posts/2022-05-18-tidyverse/distill-preview.png",
    "last_modified": "2022-05-19T09:35:30+05:30",
    "input_file": {},
    "preview_width": 1920,
    "preview_height": 995
  },
  {
    "path": "posts/2022-05-14-how-to-write-functions-in-r/",
    "title": "How to write functions in R",
    "description": "Functions are one of the fundamental tools in R programming. It is very easy to create functions in R, if you know the basics.",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2022-05-14",
    "categories": [],
    "contents": "\nFunctions in R\nThe syntax for writing functions in R is very straightforward and\nthere is little room for errors. If you know some of the most common\nfunctions in R like the apply family, you can create and customize a lot\nof functions.\n\n\nfunctiona<- function(x, y){x +y} # this is a basic structure of a function in R\nlibrary(tidyverse)\n\n\n\nIn the first part of this function , we tell R that this is going to\nbe a function be writing “function”. Then we add the arguments to the\nfunction viz., “x” and “y” within parentheses. Next, within the curly\nbrackets we write the actual mechanics of the function. In this case we\nwant to add x and y together. Let’s see how this function works.\n\n\nx <- 2\ny <- 4\nfunctiona(x,y)\n\n\n[1] 6\n\nWhat is tidyevals\nAbove we showed a very simple example of a function in R. But you can\ndo so much more with these functions. For example, if you have a\ntemplate for ggplot, you can encase it within a function and then just\nchange the name of the variables to get fresh outputs, without the need\nfor copying and pasting.\n\n\ndata(mtcars)\nglimpse(mtcars)\n\n\nRows: 32\nColumns: 11\n$ mpg  <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 1…\n$ cyl  <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4…\n$ disp <dbl> 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7,…\n$ hp   <dbl> 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180…\n$ drat <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3…\n$ wt   <dbl> 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190,…\n$ qsec <dbl> 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00,…\n$ vs   <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1…\n$ am   <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1…\n$ gear <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4…\n$ carb <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2…\n\n## Suppose you create a graph for cylinder count and mpg of cars using this data set\nmtcars |> \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point(aes(color = wt, size = wt)) +\n  facet_wrap(~ cyl)+\n  theme(legend.position = \"NULL\")\n\n\n\n\nNow that we have created this graph suppose we want to plot the\nrelationship between horsepower and mpg in a similar fashion. One option\nis to write the samy syntax once more and then change the y value to\n“hp”. Or you can write a function to automate the process.\n\n\n# So given the information you already have, the function will look like this\ngraph<- function(independent, dependent){\n  mtcars |> \n  ggplot(aes(x = independent, y = dependent)) +\n  geom_point(aes(color = wt, size = wt)) +\n  facet_wrap(~ cyl)+\n  theme(legend.position = \"NULL\")\n}\n# lets see if this works\ngraph(independent = disp,dependent =  hp)\n# We get an error out of this\n\n\n\nWhy didn’t this work? The answer lies in tidyeval. You see when you\nare calling variables within a function they should be within ellipsis\nor quotation marks. Since our function does not know where to look for\nthe variables disp and mpg, it is not able to compute the function. So\nnow we when we call the variables dependent and independent within the\nfunction syntax, we will wrap them in double curly brackets. This will\nensure that the variables are treated as variables and the function\nshould work.\n\n\ngraph<- function(independent, dependent){\n  mtcars |> \n  ggplot(aes(x = {{independent}}, y = {{dependent}})) +\n  geom_point(aes(color = wt, size = wt)) +\n  facet_wrap(~ cyl)+\n  theme(legend.position = \"NULL\")\n}\ngraph(independent = disp,dependent =  hp)\n\n\n\n\nSo this is what tidyeval is in the simplest terms. If you are writing\nfunctions in R where different variables involved, you must wrap them in\ndouble curly braces, or your function will not work.\nOther examples\nWe have seen one way in which writing functions can help you\ndeclutter your code. Now lets talk about how we can chain up multi-step\ndata analysis processes using functions. Suppose you have a dirty data\nset that you want to wrangle regularly and pre-process without having to\nwrite the same functions over and over again. For example, whenever I\nget a new data-set I will typically run “janitor::clean_names” followed\nby “janitor::remove_empty_rows” and “janitor:: remove_empty_cols” to\nclean up the mess a little bit.\n\n\ncleanitup<- function(dataset){\n  library(janitor)\n  dataset<<- dataset |> clean_names() |> \n    janitor::remove_empty()\n}\ncleanitup(mtcars)\nglimpse(mtcars)\n\n\nRows: 32\nColumns: 11\n$ mpg  <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 1…\n$ cyl  <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4…\n$ disp <dbl> 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7,…\n$ hp   <dbl> 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180…\n$ drat <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3…\n$ wt   <dbl> 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190,…\n$ qsec <dbl> 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00,…\n$ vs   <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1…\n$ am   <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1…\n$ gear <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4…\n$ carb <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2…\n\n# Since we saved the modified mtcars to dataset, now we can access it outside the function as well\nglimpse(dataset)\n\n\nRows: 32\nColumns: 11\n$ mpg  <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 1…\n$ cyl  <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4…\n$ disp <dbl> 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7,…\n$ hp   <dbl> 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180…\n$ drat <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3…\n$ wt   <dbl> 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190,…\n$ qsec <dbl> 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00,…\n$ vs   <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1…\n$ am   <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1…\n$ gear <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4…\n$ carb <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2…\n\nIf you want to save a object created within your function to the\nglobal environment, you can use the “<<-” operator rather than the\ncommon “<-”. Writing functions in R is not very difficult or\ncomplicated once you have grasped the core concepts behind it.\n\n\n\n",
    "preview": "posts/2022-05-14-how-to-write-functions-in-r/how-to-write-functions-in-r_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-05-14T10:29:55+05:30",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2022-05-14-webscraping/",
    "title": "Web-scraping with rvest",
    "description": "Websraping with R and rvest is very convenient",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2022-05-14",
    "categories": [],
    "contents": "\nThe Internet is filled with a lot of information and as data\nenthusiasts it is our sacred duty to get data from wherever we can. Some\nwebsites provide access to their data through apis, while others are not\nas forthcoming. First we load the packages\n\n\nlibrary(rvest)\nlibrary(httr)\nlibrary(htmltools)\nlibrary(stringr)\nlibrary(tidyverse)\n\n\n\nThere is a nice website called 91wheels, that helps us look at car\nprices and compare between them. We shall use this website to gather\nupdated car prices, which we shall use for downstream analyses.\nThe first step is to identify the website and copy its entire url.\nNext, we use the “read_html” function to read the entire webpage. This\nis how webscraping works, since HTML is a language to display content on\nwebpages, it has tags for all relevant content that we see anywhere.\nSince most of the times, the data of our interest is in text format, we\ncan gather the relevant information by reading the entire webpage.\n\n\ntiago<- read_html(\"https://www.91wheels.com/cars/between-5-lakh-to-10-lakh\")\n\n\n\nIn the next step, I use the selector gadget in chrome extension\nmarket to find out the xml path to the two variables of my target\ni.e. car name and car price range.\n\n\nprice<- tiago |> html_nodes(\"._cardofcar_price__3qcNH\") |> html_text() \nprice1<- price |> str_remove_all(\"[:alpha:]\") |> str_remove_all(\"^\\\\W\") |> as_tibble()\nname<- tiago |> html_nodes(\"._cardofcar_titleName__2ZokJ\") |> html_text() |>  as_tibble()\n\n\n\nNow we have two tibbles called “name” and “price1” that have all the\nrelevant information we need to create the dataset. But if we look at\nthe two tibbles, we can see that we are long way from clean data that is\nready for analysis\n\n\nhead(name) # This tibble is fine since car names are character variables\n\n\n# A tibble: 6 × 1\n  value               \n  <chr>               \n1 \"  KIA Carens  \"    \n2 \"  Tata Punch  \"    \n3 \"  Tata Nexon  \"    \n4 \"  KIA Sonet  \"     \n5 \"  Hyundai Venue  \" \n6 \"  Nissan Magnite  \"\n\nhead(price1) # We want a single car price without any other strings and annoyiung characters like the rupee symbol\n\n\n# A tibble: 6 × 1\n  value                \n  <chr>                \n1 \"₹ 9.60  - ₹ 17.70  \"\n2 \"₹ 5.68  - ₹ 9.49  \" \n3 \"₹ 7.43  - ₹ 13.74  \"\n4 \"₹ 7.15  - ₹ 13.79  \"\n5 \"₹ 6.99  - ₹ 11.72  \"\n6 \"₹ 5.76  - ₹ 10.15  \"\n\n\n\nprice1<- price1 |> separate(value, into= c(\"lower\", \"higher\"), sep = \"-\")\nhead(price1)\n\n\n# A tibble: 6 × 2\n  lower      higher      \n  <chr>      <chr>       \n1 \"₹ 9.60  \" \" ₹ 17.70  \"\n2 \"₹ 5.68  \" \" ₹ 9.49  \" \n3 \"₹ 7.43  \" \" ₹ 13.74  \"\n4 \"₹ 7.15  \" \" ₹ 13.79  \"\n5 \"₹ 6.99  \" \" ₹ 11.72  \"\n6 \"₹ 5.76  \" \" ₹ 10.15  \"\n\nNow we join the car names with the prices to get a data set that is\nshaping up nicely. We can use the “bind_cols” or “cbind” functions to\njoin them.\n\n\nfinal<- bind_cols(name, price1)\nhead(final)\n\n\n# A tibble: 6 × 3\n  value                lower      higher      \n  <chr>                <chr>      <chr>       \n1 \"  KIA Carens  \"     \"₹ 9.60  \" \" ₹ 17.70  \"\n2 \"  Tata Punch  \"     \"₹ 5.68  \" \" ₹ 9.49  \" \n3 \"  Tata Nexon  \"     \"₹ 7.43  \" \" ₹ 13.74  \"\n4 \"  KIA Sonet  \"      \"₹ 7.15  \" \" ₹ 13.79  \"\n5 \"  Hyundai Venue  \"  \"₹ 6.99  \" \" ₹ 11.72  \"\n6 \"  Nissan Magnite  \" \"₹ 5.76  \" \" ₹ 10.15  \"\n\nStill the pesky rupee symbol continues to pursue us. Notice there are\nspaces around the rupee symbol which we can use to separate the column\ninto multiple columns and then select the column which only contains the\nnumeric vector of price. Moreover, the higher and lower prices of the\ncar should have been changed to a numeric vector by now.\n\n\nfinal_prices<- final |> separate(lower, into = c(\"symbol\", \"lower\", \"space\"), sep = \" \") |> select(value,lower, higher )|> \n  separate(higher, into = c(\"symbol\", \"space\", \"higher\"), sep = \" \") |> \n  select(value,lower, higher ) |> \n  mutate(lower = as.double(lower),\n         higher = as.double(higher))\nhead(final_prices)\n\n\n# A tibble: 6 × 3\n  value                lower higher\n  <chr>                <dbl>  <dbl>\n1 \"  KIA Carens  \"      9.6   17.7 \n2 \"  Tata Punch  \"      5.68   9.49\n3 \"  Tata Nexon  \"      7.43  13.7 \n4 \"  KIA Sonet  \"       7.15  13.8 \n5 \"  Hyundai Venue  \"   6.99  11.7 \n6 \"  Nissan Magnite  \"  5.76  10.2 \n\nfinal_prices |> knitr::kable(type = \"html\") # our final output looks like this.\n\n\nvalue\nlower\nhigher\nKIA Carens\n9.60\n17.70\nTata Punch\n5.68\n9.49\nTata Nexon\n7.43\n13.74\nKIA Sonet\n7.15\n13.79\nHyundai Venue\n6.99\n11.72\nNissan Magnite\n5.76\n10.15\nTata Altroz\n6.00\n10.00\nTata Tiago\n5.23\n7.33\nToyota Glanza\n6.39\n9.69\nMG Astor\n9.98\n17.73\nRenault Kiger\n5.84\n10.39\nHonda Amaze\n6.44\n11.27\nVolkswagen Virtus\n10.00\n10.50\nKIA Sonet CNG\n11.00\n13.00\nTata Curvv\n20.00\nNA\nTata Avinya EV\n15.00\n20.00\nTata Blackbird\n11.00\n15.00\nJeep Meridian\n30.00\nNA\nMahindra Scorpio 2022\n12.00\n17.00\nToyota Land Cruiser\n1.50\nNA\nTata HEXA\n14.00\n20.00\nAudi Q3\n40.00\nNA\nBugatti Chiron\n19.21\n21.22\nCitroen C3\n7.00\n9.00\n\nScrape the Decathlon India\nwebsite\n\n\ndecathlon<- function(search, pagenum){\n  library(rvest)\n  library(tidyverse)\n  page<-(\"https://www.decathlon.in/search?query=\")\n  pagecont<- paste0(page, search)\n  prices<- pagecont |>\n    read_html() |>\n    html_nodes(\"._3wHKeni9X-\") |>\n    html_text()\n  # prices\n  productname<- pagecont |> read_html() |>\n    html_nodes(\".card-title\") |>\n    html_text()\n  # productname\n\n  price<- tibble(productname, prices)\n  price2<- bind_rows(NULL, price)\n  print(price2)\n}\n\n\n\n\n\ndata<- decathlon(\"merino\", 1) |> janitor::clean_names()\n\n\n# A tibble: 20 × 2\n   productname                                                  prices\n   <chr>                                                        <chr> \n 1 \"TREKKING MERINO WOOL SCARF  - MT500 - KHAKI \"               ₹ 799 \n 2 \"TREKKING MERINO WOOL KNIT CAP - MT500 - BLACK \"             ₹ 699 \n 3 \"Men's Mountain Trekking Long-sleeved T-Shirt - MT500 MERIN… ₹ 2,4…\n 4 \"Men's Mountain Trekking Merino Wool Base Layer Tights / Le… ₹ 2,1…\n 5 \"Men's Long-sleeved T-shirt Mountain Trek Merino Wool with … ₹ 3,5…\n 6 \"Men's Long-sleeve T-shirt Merino Wool  MT500\"               ₹ 2,1…\n 7 \"Travel 50 Merino Wool t-shirt-Grey\"                         ₹ 999 \n 8 \"Men's Trekking Merino Wool Short-Sleeved T-Shirt MT500 \"    ₹ 1,9…\n 9 \"MERINO WOOL TREKKING HEADBAND -MT500 - BLUE \"               ₹ 599 \n10 \"Women's Mountain Trekking Merino T-shirt Trek 500 - Purple\" ₹ 999 \n11 \"Men's Mountain Trekking Short-Sleeved T-Shirt Trek 500 Mer… ₹ 1,9…\n12 \"Men's Merino wool trekking travel polo shirt - TRAVEL 500 … ₹ 999 \n13 \"Women’s merino wool legging underwear - MT500\"              ₹ 2,1…\n14 \"Women's Long-sleeve T-shirt Merino Wool  MT500\"             ₹ 2,1…\n15 \"Men's Mountain Trekking Merino Wool Boxer Shorts MT500\"     ₹ 1,5…\n16 \"Men's Trekking Merino Wool Short-Sleeved T-Shirt MT500 - p… ₹ 1,9…\n17 \"Women's Travel Trekking Merino Wool Tank Top  Travel 500 -… ₹ 1,4…\n18 \"Adult Mountain Trekking Merino Wool Liner Gloves Trek 500 … ₹ 899 \n19 \"Men's Mountain Trekking Merino Wool Boxer Shorts MT500\"     ₹ 1,5…\n20 \"Women’s Long-sleeved Merino Zipped Neck T-shirt - MT500\"    ₹ 2,5…\n\nhead(data)\n\n\n# A tibble: 6 × 2\n  productname                                                   prices\n  <chr>                                                         <chr> \n1 \"TREKKING MERINO WOOL SCARF  - MT500 - KHAKI \"                ₹ 799 \n2 \"TREKKING MERINO WOOL KNIT CAP - MT500 - BLACK \"              ₹ 699 \n3 \"Men's Mountain Trekking Long-sleeved T-Shirt - MT500 MERINO… ₹ 2,4…\n4 \"Men's Mountain Trekking Merino Wool Base Layer Tights / Leg… ₹ 2,1…\n5 \"Men's Long-sleeved T-shirt Mountain Trek Merino Wool with Z… ₹ 3,5…\n6 \"Men's Long-sleeve T-shirt Merino Wool  MT500\"                ₹ 2,1…\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-05-15T11:56:55+05:30",
    "input_file": {}
  },
  {
    "path": "posts/2022-05-12-harsil-trip/",
    "title": "Harsil trip",
    "description": "A birding trip to Harsil, Uttarakhand, India.",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2022-05-12",
    "categories": [],
    "contents": "\nHarsil valley2022 was the year of fresh starts, for most of us, who have been\nconfined to their homes for the past two years since the covid-19\npandemic. We (Manjari and myself) had a mildly productive year in 2021,\nand managed to submit our respective Doctoral theses for review. As we\nwrapped up the rest of our academic obligations we had a little window\nof opportunity to visit Harsil in Uttarakhand. We came to know of Harsil\nfrom our friend, Dr. Ankita Sinha, who studied riverine birds and their\necology along several Himalayan rivers and had intimate knowledge of\nHarsil. Over the years, she would tell us about the rare birds she had\nencountered in that area. Unfortunately, we could not find time from our\nown field obligations to visit this beautiful valley. A long weekend\nholiday of four days was round the corner, and we wanted to make good\nuse of it. We packed our bags and called Ankita to let her know of our\nplans. She graciously communicated with her local contacts and arranged\nfor hotel rooms at discounted prices for us. Mr. Asif from Turner road,\nagreed to drop us at Harsil for INR5500, which was quite deal since most\nof the other drivers were quoting figures close to twice the amount. We\nstarted our journey from Dehradun at 6am Thursday, April 14. The\ndistance to Harsil is about 250 kilometers, since most of the road is\nthrough hilly regions that translates to about the same as travelling\n500kms on the plains. Thankfully we had an early start. Mr. Asif is a\nlong time resident of Dehradun and on the way to Harsil he narrated\nseveral stories of his exploits and kept us entertained. Like typical\nDoonites, the three of us had a wonderful time blaming everyone else for\nruining and polluting the beautiful valley. Our conversations started\nfrom the lost green cover of Dehradun to the unsightly expansion of the\ncity that all of us have grown to love.\nBirds\nEveryone has different priorities for choosing their vacation spots.\nWe have two primary criteria, the location should not be overtly\ntouristy, and it should have good spots for birding. Harsil falls on the\ncircuit of the char-dham yatra, and during that time the place is\nflooded with pilgrims from all over the country trying to score brownie\npoints with their respective saviours. We planned our trip before the\ncommencement of the Char-dham yatra and hence had a chance to experience\nthe tranquility of the region. Harsil is a great place to spot some rare\nhimalayan birds and we have been told so by several of our colleagues at\nWildlife Institute of India. The trip to Harsil has been planned and\ncancelled several times by now due to unforeseen exigencies so it was a\nnow or never moment for us.\nWe had seen beautiful himalayan villages before during our trekking\ntrips around uttarakhand, but nothing prepared us for the beauty of\nHarsil. We spent every waking moment awestruck by the majesty of vast\nsnow-clad himalayan peaks. It was humbling to grasp that the life-giving\nGanga has its origins nearby and\nCoal tit\nCoal titWater pipit\nWater pipitGrey wagtail\nGrey wagtailBrown Dipper\nBrown dipperIBISBILL\nIbisbillEuropean Goldfinch\nEuropean goldfinchSiberian Stonechat\nSiberian stonechatThe Views\nBirds aside, Harsil is a beautiful place. The village of Harsil falls\non a ancient trade route that connects India with Tibet. The ancient\nvillages of Harsil, Mukba, and Jhala still have old routes that connect\nit to surrounding countries. First day of the trip we set out to visit\nthe village of Mukhba/Mukba. The Hindu diety Ganga who is the embodiment\nof the Holy river Ganga that nurtures major parts of India has her\nprimary temple at Gangotri. During the Char-dham yatra pilgrims come to\nvisit Ganga and seek her blessings. For most parts of the year, the\nstatue of the diety stays in Gangotri, and it is shifted to Mukhba\nduring the harsh winter months. When we were visiting Harsil, the diety\nwas presiding at Mukhba and we had the golden opportunity to get her\nblessings.\nTemple of Mukhba villageAfter visiting the temple, we crossed a bridge to village of Dharali.\nWhile Mukhba is situated higher up on one side of the hill, Dharali is\nat the same level as the river and has numerous apple orchards.\nBridge between Mukhba and\nDharaliThe road from Harsil goes to Gangotri via Dharali, so it was a brisk\nwalk back to Harsil.\nDay 2\nThis day we decided to go off the beaten track and scout some\npotential birding hotspots near Harsil. As we were walking from Harsil\nto the small hamlet of Bagori, we found a well-laid trail on our right.\nA little google search revealed that this was the famous Kyarkoti trek,\nthat is relatively unexplored and provides an excellent high-altitude\nvalley trek option for people who want to avoid the crowd at Valley of\nflowers.\nWe found some excellent homestays at Bagori Village. One of the\nhomestay owners quoted about 1500 inr per day per room which included\nbreakfast and dinner. Bagori is an excellent option for people who want\nto experience a traditional homestay experience at a himalayan village.\nThe village is very well-maintained and a must-visit because it is right\nnext to the Bhagirathi river and provides excellent views of the Kalanag\nmountain and is surrounded by apple orchards. I can only imagine, how\nbeautiful this place would look on a moonlit night when apple trees are\nin full blossom.\nThis day we were on the quest to find the Ibisbill, but\nunfrotunately, despite walking back and forth about 12kms we could not\nsight that bird.\nDay3\nView of Harsil from BagoriThis was our last day at Harsil and our cab was to arrive from\nDehradun at 10am to get us back home. We did not waste precious daylight\nand started the morning search for the ibisbill at 7am. By 8am we had\ncrossed the border of Bagori village and on our way to the Jhala\nvillage. We were walking on a ancient trade route that connected\nUttarakhand with Himachal Pradesh. The road was rocky but wide, it\nhugged the bhagirathi as it snaked its way around the mountain. As we\nwere walking down that road, we could not help ourselves wondering how\nmen and animals must have used this road for hundreds of years before\nus. We were having a lively conversation about the beauty of Harsil and\nhow we must visit this place at least once a year. Then suddenly,\nManjari spotted a Ibis bill nesting on a river island. The back plumage\nof the bird was camouflaged by the rounded rocks of the river island.\nKudos to her, we were able to spot it and that truly was the cherry on\ntop of the cake.\nWith the ibis bill deeply etched in our memories, we continued\nwalking down the road, hungry for more rare sightings. The day before we\nhad heard one restaurant owner recount how gorals are a common sight in\nthis area and very easy to spot if one keeps their eyes peeled. While\nManjari was scanning the river bed for more birds, I had my eyes set on\nthe rocky cliffs.\nGoral on the ridgeAs luck would have it, we spotted two gorals browsing on the steep\ncliffs above us and thanks to the Nikon P900, we also managed to get\nsome great shots of these majestic bovids. If we had more time, this\nwould have been a great day filled with surprises and missed breakfast\nand lunch. However we were on the clock. Like the kid trying to mug up\noutside the examination hall, we tried to spot as many birds, animals,\ninsects as we could. Three days and one trip is just not enough to\nexperience Harsil.\nIt was 10am, our cab would be arriving anytime now, so with a heavy\nheart we headed back. We had a short breakfast with our cab driver\nbefore starting off, it would be 7pm before we reached home. Harsil,\nwhich seemed like a distant place till a few days back, was now etched\nin our minds. I can close my eyes and be there in an instant. As we were\nheading back we knew, we had to come back for the conversations and\nsojourns left unfinished.\n\n\n\n",
    "preview": "posts/2022-05-12-harsil-trip/images/greywagtail1.JPG",
    "last_modified": "2022-05-31T09:17:13+05:30",
    "input_file": {}
  },
  {
    "path": "posts/2021-07-10-zoos-in-india/",
    "title": "Are zoos relevant today?",
    "description": "A short history of zoo-biology and  wildlife conservation in Indian zoos",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-07-10",
    "categories": [
      "animal welfare",
      "zoo biology",
      "Science"
    ],
    "contents": "\nDo we really need zoos?\n\n\n\nFigure 1: Asiatic lion living out her life at an Indian zoo\n\n\n\nThe short answer is no, not really! For the more nuanced version read\non. Let’s justify the short answer first though. The primary purpose of\na zoo is not the welfare of animals, it is geared towards fixing our\nmistakes, providing a shelter, an insurance policy for keeping\nendangered species around. That is the primary purpose of a modern zoo,\nin the earlier days when zoos were a mix of a menagerie and a circus,\ntheir purpose was to draw in visitors and show them exotic animals from\naround the world. If you come to think of it, the human civilization is\nbuilt on the exploitation of animals and pilferage of natural resources.\nAnimals have served several roles in building our civilization.\nAt the beginning we used animals as food source.\nThen we domesticated dogs, cattle, camels for hunting,\ntransportation, resources and as pets.\nAnimals were also used in wars.( horses, dogs, war elephants and in\nsome cases pigs)\nAnimals have been used to understand the patterns and processes of\nnature.\nFinally, we started using them as modes of entertainment.\nHistory of animals is not separate from the history of human\ncivilization. The early hominids slowly moved from fearing large animals\nto hunting them. But the fear and awe for nature and its manifestations\nin the form of wild animals. The At the very basic level, zoos are a way\nfor humans to exert control over nature and that is the very reason, why\nyou do not find zoos across all cultures. Only the wealthy and the most\ndiverse nations have a history of zoo keeping. If all the zoos in the\nworld vanished today, right this instant and all animals housed in them\nwere released back to the wild ( and lets say all of them survived). No\none would care, except maybe the people who run the zoos or are employed\nby them. So there is no tangible effect of zoos on humans and our world\nright?\nSomething similar has already happened in our recent past, the\nvanishing of circuses. circuses and animal shows although exploitative\nof animals go back longer than zoos. Circuses were the entertainment of\nthe masses. roaming bands of gypsies with animals would put up\nperformances at villages. Hence animals performing tricks became a part\nof\nZoos are human-made institutions much like temples, offices, railway\nstations and they do serve a purpose in the human society, but is that\npurpose relevant or important anymore? Contrary to popular opinion, the\nsole purpose of a modern zoos is not visitor entertainment. If the\npurpose is to keep wild animals in captivity for visitor entertainment,\nthe Roman games and amphitheatres should also be considered zoos.\nZoological parks or zoos are types of nature conservancy, where visitors\ncome to learn about animals and get a more focused understanding of the\nnatural order of the world. So, we can say that there is an educational\naspect to zoos, much akin to museums but the specimens are living\nbreathing animals. Therefore the modern zoos act as a conduit between\nthe natural world and human civilization. It is a place where the urban\nhumans come to experience the natural world and interface with animals.\nModern zoos also serve the purpose of research and conservation. In this\narticle, we will look at both sides of the debate. After I have\npresented the case for both sides, I will leave you stranded, to make\nyour own decision. But before that we need to understand how zoos came\ninto being and what were the motivations of the early creators of\nzoos.\nThe status of animals in\nAncient India\nThe period between 10,000-3000 BC was crucial for the construction of\nthe human civilization. It was during this period that humans started\nthe large-scale collection and taming of wild animals for utilitarian\npurposes (Kisling\n2000). We can trace the origin of Indian auroch cattle\nspecies to sometime around 18,000 BCE (Loftus et al. 1994). Sally walker in her\nchapter on Indian zoos dates the history of wild animal keeping in India\nbetween 3000 BCE (Kisling 2000) Since most animal\ndomestications can be traced back to ancient Egypt, Mesopotamia, China,\nCentral America and India, we can assume that the oldest wild animal\ncollections would originate from this region. The written records of the\nancient Egyptians and Mesopotamians indicate that royal gardens or\nmenageries were common place. Wild animals such as lions would be tamed\nby royals as companions and kept in these royal gardens (Kisling\n2000). The Mehrgarh find dates hominid activity in the indian\nsubcontinent to 7000 BCE (Sekar\n2017). In the “Conservation conundrum of India”\nSekar (2017), rightly points out that the\nmUghal emperors like Akbar and Jehangir used Asiatic Cheetah for hunting\nblackbucks. Mughal emperors, had approximately 900 Asiatic cheetah in\ntheir royal menagerie. So the housing and captive management of wild\nfelids must have been a common practice across the asian continent.\n\n\n\nFigure 2: A wild Asyrian lion released into the mesopotamian\nroyal garden (668 BCE)\n\n\n\nRoyals of all kinds used to hunt and capture wild animals as a way to\nshow their control over the natural forces in the eyes of the ruled.\nThese same royals were also the champions of conservation of certain\nanimal species. Ashoka and his grandfather Chandragupta enacted animal\nconservation laws. Alexander was known to capture exotic animals and\nsend them back home in Macedonia to showcase his might and control over\nthe unknown world. Early rulers in China and Egypt created massive\nmenageries with wild animals and plants as a microcosm of their\nworld-view and to showcase their control over the natural world. Indian\nrulers like Chandragupta Maurya, Ashoka, Cholas had a long history of\ncapturing and holding wild animals in captivity that were used for war,\nagriculture or cultural purposes. The elephant was a particular\nfavourite of Indian rulers, who would capture, tame and keep several\nthousand elephants in their armies . The mughals used to hunt with\nfalcons dogs and asiatic cheetahs, therefore capturing wild animals and\ntraining them to perform certain tasks were a common practise in the\nthriteenth century. The first zoos were not ex-situ\nconservation center, they were symbols of power accessible to the\nrulers. The common populace would only chance a view of these glorious\nliving artifacts during royal parades.\n\n\n\nFigure 3: Elephants as depicted in the baburnama\n\n\n\nThe mauryans even restricted the poaching of elephants and preserved\nforests especially to conserve the resident elephant populations.\nTherefore, zoos as a space of public gathering may not have been as\nubiquitous as they are today. But the culture of capturing and keeping\nwild animals in captivity must have been ubiquitous across several\ncultures. So we can say clearly that the concepts of animal husbandry\nand captive animal welfare and management predates zoos. While the zoos\nof the yore were a symbol of royal power and extravagance. As the world\nmoved from autocracies to democracies, governments also needed to show\ntheir control over natural forces to the public.\n\n\n\nFigure 4: Scenes of a typical mughal hunt, used as a form of\ndiplomacy\n\n\n\nThe combination of modern firearms and European colonialism\nnegatively impacted the wildlife and biodiversity across all continents.\nLike the earliest conquerors, the European colonialists also sent back\nmementos of their great conquests in the form of exotic animals and\nplants. Thus there was a necessity to establish menageries or zoological\ngardens, which could handle the large influx of wild fauna across the\nworld.\nZoos for humans and animals\nWhen you hear the word, you may think that zoos are places where\nanimals are kept for the purpose of education and awareness of humans.\nBut you would be only partially correct, the history of zoos is not that\nsimple.\n\n\n\nFigure 5: Human zoos a offshoot of european colonialism\n\n\n\nIn the late nineteenth to the early twentieth centuries, human zoos\nwere common place across Europe and North-America. Hunters and\ntraffickers, would bring men and women of rare tribes from remote parts\nof the world along with representative fauna of the region for the\neducation and entertainment of European city-dwellers. Such practices an\noff-shoot of European colonialism, laid the foundation for racial\nstereotyping and oppression that continues to plague these countries.\nUnfortunately, what had been done to humans as a part of these ” human\nzoos” continues to be practised under the facade of conservation. It is\nindeed hilarious that a continent that was responsible for the\nsystematic extinction of of most megafauna across the world, now\npreaches pro-conservation measures\nHagenbeck’s legacy\nCarl Hagenbeck is a controversial character in the history of zoos.\nHis contribution to the development of the modern zoo is unquestionable.\nHe was also involved in large-scale human and wildlife trafficking,\nwhich makes him a villain by today’s standards. (Carmeli 1997)\n\n\n\nFigure 6:  Advertisement for Hagenbeck’s museum/menagerie\n\n\n\nWhite hunter black heart\nHunters became catchers in the later half of the nineteenth\ncentury.\n\n\n\nFigure 7: Hans Schomburg a infamous poacher and wildlife\ntrafficker posing with his latest trophy courtesy jutta neimann\n\n\n\nChristoph Schulz a hunter turned catcher, started working with\nHagenbeck in 1909. Schulz and his wife wrote several accounts of German\ncolonial life in East-Africa. Evidences suggest that trafficking of wild\nanimals continued unhindered well into the 1950s. By this time, the\nEurope had been through two great wars and the funding required to poach\nand capture wild animals must have ebbed.\n\n\n\nFigure 8:  Animal trafficking for circuses and menageries\nbecame profitable in the early twentieth century\n\n\n\nHence zoos were made relevant and re-branded for the modern era. They\nwere re-purposed, and became centres for research , nature-education,\nand also visitor-entertainment. During the mid nineteenth till the\nmid-twenty-first century, animals were extensively used in circuses\nacross the world. Circuses were another form animal-profiteering that\nhave vanished or have become irrelevant since the 1990s\n\n\n\nFigure 9: Menageries and circus a common goal\n\n\n\nHowever, despite this intense campaign to change the public\nperception around zoos, zoos continue to be centres of urban\nrecreational activities.\nThe state of modern Indian\nzoos\nThe history of zoos in India can be a bit confusing if you do not use\nthe correct definition of zoos. If zoos are defined as a place wherein\nyou house wild animals for the recreation and education of visitors,\nthen the first Indian zoo has to be the Arignar Anna zoological park,\nChennai, India(est 1855), which was shortly followed by the Alipore\nzoological gardens (est 1863). For perspective, the Tower of London\nmenagerie ( known as the London zoo) was founded in 1831 under the\nzoological society of London.\nConservation\nbreeding centers for endangered species in India\nThere are over 192 zoos in India, most of the zoos in India are\nstate-run. In the early 2000s the government of India identified over 34\nendemic species across all states of India and identified coordinating\nzoos as conservation breeding centers for the said species. For example,\nPadmaja Naidu Himalayan Zoological Park, Darjeeling is the corodinating\nzoo for the conservation breeding of Himalayan wolf(Canis lupus\nchanco), Red panda (Ailurus fulgens fulgens), Snow\nleopard(Uncia uncia), and Pheasant(Lophophora\nimpejanus). While Sakkarbaug zoo, Junagadh handles the conservation\nbreeding for the following species Asiatic lion ( Panthera leo\npersica ), Wolf ( Canis lupus pallipes), Asiatic wild\nass(Equus hemionus khuur) and Indian Vulture. Similarly Nehru\nZoological Park, Hyderabad, is one of the coordinating centers for\nex-situ conservation breeding of mouse-deer().\nWhat the future holds for\nmodern zoos\nIn the twenty-first century, I foresee zoos losing popularity due to\nlegitimate ethical concerns. Just like the circus lost its popular\nsupport, zoos that use animals for cheap entertainment and do not have\nany tangible links with ex-situ conservation will also\ndisappear. There are writings on the wall which suggest that zoos\nalready have lost popular support to some degree and need to increase\nthe level of visitor-animal interaction to garner more attention.\nThere is a large body of research that suggests that captive animals\ndo not seek out visitor interactions. In fact, some species display\nsignificant amount of stereotypy in response to forced visitor presence\n(Sherwen and\nHemsworth 2019). However, in the past couple of years, I have\nnoticed a slight shift in narrative to the effect of visitor\ninteractions on animals. Recently a group of researchers claimed that\nelephants looked forward to interacting with visitors(Fernandez,\nUpchurch, and Hawkes 2021). It seems to me that the elephants\nwere looking forward to the treats provided by the visitors. The zoo was\nlooking forward to the extra money they could make out of these “unique\nexperiences”. The visitors were looking for some interesting selfies and\ninstagram clout. While the authors, probably had some serious alignment\nof interest with the zoo administration.\nZoos still serve the purpose of nature education and sensitization of\npublic through live exhibits. I think it will become increasingly\ndifficult for zoos to import exotic animals as there will be an acute\nshortage of biodiversity across the world. If there was a rule, that\nprevented zoos from housing any species that are not endemic to their\nregion, European zoos will probably turn into glorified aviaries. Why do\nEuropean zoos need to a have a Endangered species Exchanged Programme?\nIs it really necessary for European zoos to house Asiatic lions to\nensure their long term survival? Presently the European zoos hold around\n40-50 Asiatic lions in captivity. The captive Asiatic lion population at\nthe European zoos cannot survive for more than two generations if not\nsupplemented with founders from Indian zoos. As highlighted by\nAtkins(2018), most of the the Asiatic lions at\nEuropean zoos are not as genetically diverse as previously perceived. It\nmight be prudent to ask, why do European zoos, which do not have the\nbio-climatic regime to house Asiatic lions, continue to keep them? The\nanswer probably lies in the fact that lions and polar bears are crowd\npullers and make quite a lot of money for the zoos. I think it is time\nthat zoos all across the world stop importing exotic animals for the\npleasure of visitors. Zoos should be allowed collect and house only\nthose animals that are acclimatized for their region. That means, Polar\nbears and penguins should not be housed at European zoos. Zoos should\nhave a conservation plan for all endangered species housed in them. I\nthink that most zoos around the world need to trim the fat and reduce\ntheir animal holdings to become more sustainable. If a zoo does not have\nthe capability to bred a species ex-situ, and have failed at it\nmultiple times, they should not be allowed to acquire any more\nindividuals of the species.\n\n\n\nAtkinson, Kirsty E., Andrew C. Kitchener, Shanan S. Tobe, and Paul\nO’Donoghue. 2018. “An Assessment of the Genetic Diversity of the\nFounders of the European Captive Population of\nAsian Lion (Panthera Leo Leo), Using\nMicrosatellite Markers and Studbook Analysis.” Mammalian\nBiology 88: 138–43.\n\n\nCarmeli, Yoram S. 1997. “The Sight of Cruelty: The Case of Circus\nAnimal Acts.” Visual Anthropology 10 (1): 1–15. https://doi.org/dqzpnc.\n\n\nFernandez, Eduardo J., Bruce Upchurch, and Nancy C. Hawkes. 2021.\n“Public Feeding Interactions as\nEnrichment for Three Zoo-Housed\nElephants.” Animals 11 (6): 1689. https://doi.org/gkfw82.\n\n\nKisling, Vernon N. 2000. Zoo and Aquarium History: Ancient Animal\nCollections to Zoological Gardens. CRC press.\n\n\nLoftus, R. T., D. E. MacHugh, D. G. Bradley, P. M. Sharp, and P.\nCunningham. 1994. “Evidence for Two Independent Domestications of\nCattle.” Proceedings of the National Academy of Sciences\n91 (7): 2757–61. https://doi.org/dgq348.\n\n\nSekar, T. 2017. Conservation Conundrum: Journey of\nIndia’s Wildlife Through\nAges. Notion Press.\n\n\nSherwen, Sally L., and Paul H. Hemsworth. 2019. “The Visitor\nEffect on Zoo Animals: Implications and\nOpportunities for Zoo Animal Welfare.”\nAnimals 9 (6): 366. https://doi.org/10.3390/ani9060366.\n\n\n\n\n",
    "preview": "posts/2021-07-10-zoos-in-india/distill-preview.png",
    "last_modified": "2022-05-15T13:43:53+05:30",
    "input_file": {},
    "preview_width": 4320,
    "preview_height": 3240
  },
  {
    "path": "posts/2021-06-29-lets-talk-animal-welfare/",
    "title": "Let's talk animal welfare",
    "description": "Some thoughts about the animal-welfare challenges plaguing the zoo industry",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-06-29",
    "categories": [
      "animal welfare",
      "Science",
      "zoo biology"
    ],
    "contents": "\n\nContents\nAnimal welfare\nAnimal-human interactions at zoos\nAnimal-human interaction at zoos\nThe argument against animal-human interaction\nMore on my ABS conference 2021 talk\n\n\n\n\n\n\n\n\nFigure 1: Asiatic lion at the biggest ex-situ conservation breeding center\n\n\n\nAnimal welfare\nWelfare is defined by broom as the state of the animal as it tries to cope with its environment. Therefore animal welfare can be seen as the animal tries to adjust to changes in its internal and external.\nAnimal-human interactions at zoos\nI am a animal behaviour biologist, and I have worked for a over a decade at zoos all over India. For my doctoral thesis, I investigated the role of incumbent husbandry protocols, enclosure design and management practices on the welfare of Asiatic lions at the world’s largest conservation breeding centre for the species. Suffice to say that I have some street-cred when it comes to zoos. Despite working for the larger part of my professional academic career at zoos and conservation breeding centres and observing animals, I often find hard to grapple with the concept of zoos in the twenty-first century.\nThe reason is quite simple, zoos at the very basic level are there for the sake of visitors. If the visitors stoppped coming to the zoos tomorrow, there will be no more zoos. Thankfully the same cannot be said about National parks and wildlife sanctuaries. I think it is very apparent that the primary beneficiary of the zoo is the public and not the animals. And yet zoos try to rebrand themselves as ambassadors of conservation, while conveniently forgiving themselves for past indiscretions. If there ever was a single institution that had committed more crimes towards biodiversity and individual animals, zoos would be upper quartile of the top ten miscreants.\nAnimal-human interaction at zoos\nI have published some papers before (Goswami et al. 2020). The first paper published in 2020, talks about how under similar husbandry conditions, animals can have different welfare outcomes. Which brings us to the point about addressing individual variations in zoo-animals and designing husbandry practices to mitigate negative outcomes. In the second paper, we took a more proactive approach and provided some insights on how to improve welfare across different personality types(Goswami et al. 2021). We found that a combined enrichment strategy, viz., wherein several types of enrichment devices are mixed together and targeted to encourage expression of species-typical behaviour patterns. We found that such enrichment interventions when integrated with daily husbandry practices are effective in providing excellent welfare outcomes for all animals. Subjects were found using the enclosure space more consistently and evenly., and suing exploratory behaviours to seek enrichment objects. Even after removing the positive reinforcement, animals kept engaging with the enrichment devices. We found that social play increased among animals. There were some agonistic interactions in the initial stages, which was quickly mitigated by providing enough enrichment devices for all animals housed in an enclosure.\n\n\n\nFigure 2: Asiatic lions interacting with enrichment devices\n\n\n\nWe also found that animals housed in low-complexity enclosures were more likely to suffer premature consequences of poor welfare. Comparatively animals that were housed in complex and large enclosures that afforded them a larger number of withdrawal spaces were more likely to have behaviour welfare indices similar to animals housed in complex enclosures without any visitors. Therefore by providing a complex and large enclosure we can offset the deleterious impacts of visitor disturbance. During our study we also found that Asiatic lions chose to stay as far away as possible from visitors whenever possible.\nSeveral published studies show that close proximity of visitors to captive animals at zoos can have negative\nStudies on welfare impacts of human-animal interaction\nSl no\nTitle\nSpecies\nAuthors\nsample size\nVisitor effect\n1.\nBehaviour and welfare: the visitor effect in captive felids\nFelids\nSuárez, Recuerda, and Arias-de-Reyna (2017)\nNA\nNegative\n2.\nCan Zoos Ever Be Big Enough for Large Wild Animals? A Review Using an Expert Panel Assessment of the Psychological Priorities of the Amur Tiger (*Panthera tigris altaica*) as a Model Species\nAmur tiger\nVeasey (2020)\nNA\nNegative\n3.\nEnvironmental influences on stereotypy and the activity budget of Indian leopards (*Panthera pardus*) in four zoos in Southern India\nLeopard(Panthera leo pardus)\nMallapur, Sinha, and Waran (2005)\nNA\nNegative\n4.\nThe effects of intrinsic enrichment on captive felids\nFelids\nDamasceno et al. (2017)\nNA\nNegative\n5.\nEnvironmental effects on the behavior of zoo-housed lions and tigers, with a case study on the effects of a visual barrier on pacing\nFelids\nBashaw et al. (2007)\nNA\nNegative\n6.\nThe effects of visitor density and intensity on the behaviour of two captive jaguars(Panthera onca).\nFelids\nSellinger and Ha (2005)\nNA\nNegative\n7.\nA case study: The effect of visitors on two captive pumas with respect to the time of the day\nFelids\n\nNA\nNegative\nThe argument against animal-human interaction\nAnimal human interaction is not all bad and can have some beneficial effects, but only if it comes from known individuals. But the animals should not be forced to interact with unknown humans. It is a recipe for disaster. Some zoos nowadays, have started a new discourse to validate the effects of visitor disturbance on animal welfare.\nMore on my ABS conference 2021 talk\n\n\n\n\n\n\n\nBashaw, Meredith J., Angela S. Kelling, Mollie A. Bloomsmith, and Terry L. Maple. 2007. “Environmental Effects on the Behavior of Zoo-Housed Lions and Tigers, with a Case Study of the Effects of a Visual Barrier on Pacing.” Journal of Applied Animal Welfare Science 10 (2): 95–109. https://doi.org/cxk77g.\n\n\nDamasceno, Juliana, Gelson Genaro, Thomas Quirke, Shannen McCarthy, Sean McKeown, and Ruth O’Riordan. 2017. “The Effects of Intrinsic Enrichment on Captive Felids.” Zoo Biology 36 (3): 186–92.\n\n\nGoswami, Sitendu, Shiv Kumari Patel, Riyaz Kadivar, Praveen Chandra Tyagi, Pradeep Kumar Malik, and Samrat Mondol. 2021. “Effects of a Combined Enrichment Intervention on the Behavioural and Physiological Welfare of Captive Asiatic Lions (Panthera Leo Persica).” Applied Animal Behaviour Science 236: 105222. https://doi.org/gjq5dv.\n\n\nGoswami, Sitendu, Praveen C. Tyagi, Pradeep K. Malik, Shwetank J. Pandit, Riyazahmed F. Kadivar, Malcolm Fitzpatrick, and Samrat Mondol. 2020. “Effects of Personality and Rearing-History on the Welfare of Captive Asiatic Lions (Panthera Leo Persica).” PeerJ 8 (February): e8425. https://doi.org/10.7717/peerj.8425.\n\n\nMallapur, Avanti, Anindya Sinha, and Natalie Waran. 2005. “Influence of Visitor Presence on the Behaviour of Captive Lion-Tailed Macaques (Macaca Silenus) Housed in Indian Zoos.” Applied Animal Behaviour Science 94 (3-4): 341–52. https://doi.org/dg295b.\n\n\nSellinger, Rebecca L., and James C. Ha. 2005. “The Effects of Visitor Density and Intensity on the Behavior of Two Captive Jaguars (Panthera Onca).” Journal of Applied Animal Welfare Science 8 (4): 233–44. https://doi.org/c6pkjm.\n\n\nSuárez, P., P. Recuerda, and L. Arias-de-Reyna. 2017. “Behaviour and Welfare: The Visitor Effect in Captive Felids.” Animal Welfare 26 (1): 25–34.\n\n\nVeasey, Jake Stuart. 2020. “Can Zoos Ever Be Big Enough for Large Wild Animals? A Review Using an Expert Panel Assessment of the Psychological Priorities of the Amur Tiger (Panthera Tigris Altaica) as a Model Species.” Animals : An Open Access Journal from MDPI. https://doi.org/gh55dr.\n\n\n\n\n",
    "preview": "posts/2021-06-29-lets-talk-animal-welfare/distill-preview.png",
    "last_modified": "2022-05-12T10:48:00+05:30",
    "input_file": {},
    "preview_width": 1920,
    "preview_height": 1440
  },
  {
    "path": "posts/2021-06-23-data-wranglng-with-r/",
    "title": "Data wrangling with dplyr",
    "description": "Tidyverse suit of packages for R provide some nifty solutions to clean and arrange your data",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-06-23",
    "categories": [
      "Rstats",
      "Tidyverse"
    ],
    "contents": "\n\nContents\nIntroduction\nBasic components of a R syntax -\nData types in R (Nouns)\nArithmetic operators\nExercise for arithmetic operators\nAssignment operators\nExercise for assignment operators\nRelational operators\nExercise for relational operators\nLogical operators\nExercise for Logical operators\nMiscellaneous operators\nExercise for miscellaneous operators\nData wrangling in R\nThe endless scope and opportunities\n\nTopics\nPipe operators\nPipe operators cont..\nPipe operators help you read and write code from left to right\nWhat to do to understand your data?\nSummarize your data\nglimpse function\nTable function\nChange the class of a variable.\nSelect\nExercise\nRenaming variables\nArranging variables\nSummarize & aggregate 1\nsummarize 2\nSummarize 3 | some other functions\n\n\nIntroduction\nData science as a discipline finds it’s applications across all fields of knowledge. If you are from biological sciences, the amount of statistics in most of the papers, is a testament to this collusion. However statistics and data-science are not the same. You can perform statistical analysis with your calculator, MS Excel or other software.\n\n\nlibrary(tidyverse)\n#install.packages(\"magrittr\")\nlibrary(magrittr)\nlibrary(gapminder)\ngapminder <- as_tibble(gapminder)\ngapminder2 <-  gapminder\ngapminder3 <- gapminder\n\n\n\nBasic components of a R syntax -\nAll programming languages at their very cores, are basically a communication platform between the user and the computer. Since computers understand the binary language, programming languages act as the translating tools which have specific synatx and granmar that help us effectively communicate with our computers and tell it what we want to do. Most programming languages like R have strict grammar that needs to be followed to ensure that the computer understands our commands. Therefore, before embarking on the data science journey we need to understand the rules of communication. At the very base of any sentence is a grammar that includes nouns, verbs, adjectives and punctuation. In the case of R, we can translate these as the following.\nNoun = data\nVerb = function\nOperator = punctuation\nData types in R (Nouns)\nR is a language that can handle a multitude of data types. Data can be single dataframes, vectors, lists or matrices.\n - character: “a”, “swc”  - numeric: 2, 15.5  - integer: 2L (the L tells R to store this as an integer)  - logical: TRUE, FALSE  - complex: 1+4i\nclass: left ## Exercise Data types - class() - what kind of object is it (high-level)? - types() - what is the object’s data type (low-level)? - length() - how long is it? What about two dimensional objects? - attributes() - does it have any metadata?\n\n\nclass(gapminder)\n\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\ntypeof(gapminder$country)\n\n\n[1] \"integer\"\n\nlength(gapminder$continent)\n\n\n[1] 1704\n\nattributes(gapminder$continent)\n\n\n$levels\n[1] \"Africa\"   \"Americas\" \"Asia\"     \"Europe\"   \"Oceania\" \n\n$class\n[1] \"factor\"\n\nclass: left ## Data structures in R There are three major types of Data Structures - Vector - single dimension - Matrix - two dimensional - Array- n-dimensional\n\n\na <- c(1:54)\nclass(a)\n\n\n[1] \"integer\"\n\nclass: left ## Operators in R\nOperators are used to define relationships between variables in R.\nOperators are like punctuations in a sentence.\nDifferent types of operators \nArithmetic \nLogical \nAssignment \nRelation \nMiscellaneous\n\nArithmetic operators\n\nOperator\nDescription\n+\nAddition of two operands\n-\nsubtraction of b from a\n*\nMultiplication\n/\nDivision of a by b\n%%\nRemainder from division of a with b\n%/%\nquotient from division of a and b\n^\na to the power of b\nExercise for arithmetic operators\n\n\n#find the quotient for  23456789 /15432\n23456789 %/% 15432\n\n\n[1] 1520\n\n\n\n# R follows BODMAS rule\n ((12345 + 456789) * (987456/2345678)^212) / 1234568\n\n\n[1] 8.330017e-81\n\nAssignment operators\nOperator\nDescription\n=\nAssigns right side value to left side operand\n<-\nAssigns right side value to left side operand\n->\nAssigns left side value to right side operand\n<<-\nAssigns right side value to left side operand\n->>\nAssigns left side value to right side operand\nExercise for assignment operators\n\n\n# R Operators - R Assignment Operators\na = 2\nprint ( a )\n\n\n[1] 2\n\na <- TRUE\nprint ( a )\n\n\n[1] TRUE\n\n454 -> a\nprint ( a )\n\n\n[1] 454\n\na <<- 2.9\nprint ( a )\n\n\n[1] 2.9\n\nc(6, 8, 9) -> a\nprint ( a )\n\n\n[1] 6 8 9\n\nRelational operators\nOperator\nDescription\n<\nIs first operand less than second operand\n“>”\nIs first operand greater than second operand\n==\nIs first operand equal to second operand\n<=\nIs first operand less than or equal to second operand\n“>=”\nIs first operand greater than or equal to second operand\n“!=”\nIs first operand not equal to second operand\nExercise for relational operators\n\n\na <- 7.5\nb <- 2\nprint( a < b ) # less than\n\n\n[1] FALSE\n\nprint( a > b ) # greater than\n\n\n[1] TRUE\n\nprint( a == b ) # equal to\n\n\n[1] FALSE\n\nprint( a <= b ) # less than or equal to\n\n\n[1] FALSE\n\nprint( a >= b ) # greater than or equal to\n\n\n[1] TRUE\n\nprint( a != b ) # not equal to\n\n\n[1] TRUE\n\nLogical operators\nOperator\nDescription\n&\nElement wise logical AND operation\n?|\nElement wise logical OR operation\n!\nElement wise logical NOT operation.\n&&\nOperand wise logical AND operation.\n| |\nOperand wise logical OR operation.\nExercise for Logical operators\n\n\n# R Operators - R Logical Operators Example for basic logical elements\n \na <- 12 # logical FALSE\nb <- 2 # logical TRUE\n \nprint ( a > 5 & a < 15 ) # logical AND element wise\n\n\n[1] TRUE\n\nprint ( TRUE & FALSE )\n\n\n[1] FALSE\n\nprint ( TRUE | FALSE ) # logical OR element wise\n\n\n[1] TRUE\n\nprint ( !a ) # logical NOT element wise\n\n\n[1] FALSE\n\nprint ( a && b ) # logical AND consolidated for all elements\n\n\n[1] TRUE\n\nprint ( a || b ) # logical OR consolidated for all elements\n\n\n[1] TRUE\n\nMiscellaneous operators\nOperator\nDescription\n%>%\npipe operator\n%in%\nIdentifies if an element(a) belongs to a vector(b)\n:\ncreates series of vectors from left to right\nExercise for miscellaneous operators\n\n\nst <- c(1:234) # create a vector with values from 1 to 234\n# R Operators - R Misc Operators\nprint ( a )\n\n\n[1] 12\n\na = c(25, 27, 76)\nb = 27\nprint( b %in% a ) # check if b is present within a\n\n\n[1] TRUE\n\nprint(a %in% b)\n\n\n[1] FALSE  TRUE FALSE\n\na = gapminder$country\nb = \"Afghanistan\"\nc = \"Congo\"\nprint(c %in% a)\n\n\n[1] FALSE\n\nprint(b %in% a)\n\n\n[1] TRUE\n\nnames(gapminder)\n\n\n[1] \"country\"   \"continent\" \"year\"      \"lifeExp\"   \"pop\"      \n[6] \"gdpPercap\"\n\ngapminder$continent %>% summary()# prints a summary of the factor gapminder$country\n\n\n  Africa Americas     Asia   Europe  Oceania \n     624      300      396      360       24 \n\nData wrangling in R\nThe endless scope and opportunities\nFast\nfilter and subset variables faster than Excel users\n\nReproducible\nOnce you have done it, you can do it again with minimal effort-\nReduces error\nyou can correct a mistake by reading the code\nYou can go back to your original data like nothing happened\n\nTopics\nPipe operators\nSelect\nFilter\nArrange\nMutate\nJoining data\nPivot functions\nPipe operators\n%>% ( ctrl + shift + m)\nit takes whatever is present on the left and uses it to define the function written on the right.\ntraditional R language is read inwards to outwards i.e function 4 (function3(function2(function1(data))))\nPipe operators cont..\n\n\n#example \n#library(gapminder)\n#library(tidyverse)\n\n\n\nPipe operators help you read and write code from left to right\ndata %>% function1 () %>% function(2) %>% function3() %>% function4()\n\n\n#example \n\n\n\n\n\n#library(gapminder)\ngapminder1 <- tbl_df(gapminder)\ngapminder1\n\n\n# A tibble: 1,704 x 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\nWhat to do to understand your data?\n\n\nnames(gapminder)\n\n\n[1] \"country\"   \"continent\" \"year\"      \"lifeExp\"   \"pop\"      \n[6] \"gdpPercap\"\n\n\n\nstr(gapminder)# investigate the structcure of the dataset\n\n\ntibble [1,704 × 6] (S3: tbl_df/tbl/data.frame)\n $ country  : Factor w/ 142 levels \"Afghanistan\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ continent: Factor w/ 5 levels \"Africa\",\"Americas\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ year     : int [1:1704] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...\n $ lifeExp  : num [1:1704] 28.8 30.3 32 34 36.1 ...\n $ pop      : int [1:1704] 8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...\n $ gdpPercap: num [1:1704] 779 821 853 836 740 ...\n\nSummarize your data\n\n\nsummary(gapminder)\n\n\n        country        continent        year         lifeExp     \n Afghanistan:  12   Africa  :624   Min.   :1952   Min.   :23.60  \n Albania    :  12   Americas:300   1st Qu.:1966   1st Qu.:48.20  \n Algeria    :  12   Asia    :396   Median :1980   Median :60.71  \n Angola     :  12   Europe  :360   Mean   :1980   Mean   :59.47  \n Argentina  :  12   Oceania : 24   3rd Qu.:1993   3rd Qu.:70.85  \n Australia  :  12                  Max.   :2007   Max.   :82.60  \n (Other)    :1632                                                \n      pop              gdpPercap       \n Min.   :6.001e+04   Min.   :   241.2  \n 1st Qu.:2.794e+06   1st Qu.:  1202.1  \n Median :7.024e+06   Median :  3531.8  \n Mean   :2.960e+07   Mean   :  7215.3  \n 3rd Qu.:1.959e+07   3rd Qu.:  9325.5  \n Max.   :1.319e+09   Max.   :113523.1  \n                                       \n\nView(gapminder)\n\n\n\nglimpse function\n\n\nglimpse(gapminder) # from here you can check the class of each variable as well\n\n\nRows: 1,704\nColumns: 6\n$ country   <fct> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afgh…\n$ continent <fct> Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, As…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ lifeExp   <dbl> 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39…\n$ pop       <int> 8425333, 9240934, 10267083, 11537966, 13079460, 14…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\nTable function\n\n\ntable(gapminder$country)# count the number of times \n\n\n\n             Afghanistan                  Albania \n                      12                       12 \n                 Algeria                   Angola \n                      12                       12 \n               Argentina                Australia \n                      12                       12 \n                 Austria                  Bahrain \n                      12                       12 \n              Bangladesh                  Belgium \n                      12                       12 \n                   Benin                  Bolivia \n                      12                       12 \n  Bosnia and Herzegovina                 Botswana \n                      12                       12 \n                  Brazil                 Bulgaria \n                      12                       12 \n            Burkina Faso                  Burundi \n                      12                       12 \n                Cambodia                 Cameroon \n                      12                       12 \n                  Canada Central African Republic \n                      12                       12 \n                    Chad                    Chile \n                      12                       12 \n                   China                 Colombia \n                      12                       12 \n                 Comoros         Congo, Dem. Rep. \n                      12                       12 \n             Congo, Rep.               Costa Rica \n                      12                       12 \n           Cote d'Ivoire                  Croatia \n                      12                       12 \n                    Cuba           Czech Republic \n                      12                       12 \n                 Denmark                 Djibouti \n                      12                       12 \n      Dominican Republic                  Ecuador \n                      12                       12 \n                   Egypt              El Salvador \n                      12                       12 \n       Equatorial Guinea                  Eritrea \n                      12                       12 \n                Ethiopia                  Finland \n                      12                       12 \n                  France                    Gabon \n                      12                       12 \n                  Gambia                  Germany \n                      12                       12 \n                   Ghana                   Greece \n                      12                       12 \n               Guatemala                   Guinea \n                      12                       12 \n           Guinea-Bissau                    Haiti \n                      12                       12 \n                Honduras         Hong Kong, China \n                      12                       12 \n                 Hungary                  Iceland \n                      12                       12 \n                   India                Indonesia \n                      12                       12 \n                    Iran                     Iraq \n                      12                       12 \n                 Ireland                   Israel \n                      12                       12 \n                   Italy                  Jamaica \n                      12                       12 \n                   Japan                   Jordan \n                      12                       12 \n                   Kenya         Korea, Dem. Rep. \n                      12                       12 \n             Korea, Rep.                   Kuwait \n                      12                       12 \n                 Lebanon                  Lesotho \n                      12                       12 \n                 Liberia                    Libya \n                      12                       12 \n              Madagascar                   Malawi \n                      12                       12 \n                Malaysia                     Mali \n                      12                       12 \n              Mauritania                Mauritius \n                      12                       12 \n                  Mexico                 Mongolia \n                      12                       12 \n              Montenegro                  Morocco \n                      12                       12 \n              Mozambique                  Myanmar \n                      12                       12 \n                 Namibia                    Nepal \n                      12                       12 \n             Netherlands              New Zealand \n                      12                       12 \n               Nicaragua                    Niger \n                      12                       12 \n                 Nigeria                   Norway \n                      12                       12 \n                    Oman                 Pakistan \n                      12                       12 \n                  Panama                 Paraguay \n                      12                       12 \n                    Peru              Philippines \n                      12                       12 \n                  Poland                 Portugal \n                      12                       12 \n             Puerto Rico                  Reunion \n                      12                       12 \n                 Romania                   Rwanda \n                      12                       12 \n   Sao Tome and Principe             Saudi Arabia \n                      12                       12 \n                 Senegal                   Serbia \n                      12                       12 \n            Sierra Leone                Singapore \n                      12                       12 \n         Slovak Republic                 Slovenia \n                      12                       12 \n                 Somalia             South Africa \n                      12                       12 \n                   Spain                Sri Lanka \n                      12                       12 \n                   Sudan                Swaziland \n                      12                       12 \n                  Sweden              Switzerland \n                      12                       12 \n                   Syria                   Taiwan \n                      12                       12 \n                Tanzania                 Thailand \n                      12                       12 \n                    Togo      Trinidad and Tobago \n                      12                       12 \n                 Tunisia                   Turkey \n                      12                       12 \n                  Uganda           United Kingdom \n                      12                       12 \n           United States                  Uruguay \n                      12                       12 \n               Venezuela                  Vietnam \n                      12                       12 \n      West Bank and Gaza              Yemen, Rep. \n                      12                       12 \n                  Zambia                 Zimbabwe \n                      12                       12 \n\nChange the class of a variable.\n\n\nclass(gapminder$country)\n\n\n[1] \"factor\"\n\ngapminder$country <- as.character(gapminder$country)\n\n\n\nSelect\nyou have a dataset with lots of variables\nYou want to select only a few variables to work with\nYou can select a certain number of columns with this function\n\n\nglimpse(gapminder)\n\n\nRows: 1,704\nColumns: 6\n$ country   <chr> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afgh…\n$ continent <fct> Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, As…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ lifeExp   <dbl> 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39…\n$ pop       <int> 8425333, 9240934, 10267083, 11537966, 13079460, 14…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\ngapminder %>% select(continent:gdpPercap) %>% glimpse()\n\n\nRows: 1,704\nColumns: 5\n$ continent <fct> Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, As…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ lifeExp   <dbl> 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39…\n$ pop       <int> 8425333, 9240934, 10267083, 11537966, 13079460, 14…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\ngapminder1\n\n\n# A tibble: 1,704 x 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\nExercise\nselect only columns “country” and “year”and “gdpPercap”\n\n\ngapminder %>%  select(c(country, year, gdpPercap)) %>%  glimpse()\n\n\nRows: 1,704\nColumns: 3\n$ country   <chr> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afgh…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\ngapminder$year <- as.integer(gapminder$year)\n\nstr(gapminder)\n\n\ntibble [1,704 × 6] (S3: tbl_df/tbl/data.frame)\n $ country  : chr [1:1704] \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n $ continent: Factor w/ 5 levels \"Africa\",\"Americas\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ year     : int [1:1704] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...\n $ lifeExp  : num [1:1704] 28.8 30.3 32 34 36.1 ...\n $ pop      : int [1:1704] 8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...\n $ gdpPercap: num [1:1704] 779 821 853 836 740 ...\n\nRenaming variables\n\n\n#gapminder <-  rename(gapminder,c(gdp = \"gdp\"))\nnames(gapminder)\n\n\n[1] \"country\"   \"continent\" \"year\"      \"lifeExp\"   \"pop\"      \n[6] \"gdpPercap\"\n\nArranging variables\nThe arrange function helps you reorder the variables\n\n\nlibrary(gapminder)\ngapminder <- arrange(gapminder,(year))\nglimpse(gapminder)\n\n\nRows: 1,704\nColumns: 6\n$ country   <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"Ar…\n$ continent <fct> Asia, Europe, Africa, Africa, Americas, Oceania, E…\n$ year      <int> 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 19…\n$ lifeExp   <dbl> 28.801, 55.230, 43.077, 30.015, 62.485, 69.120, 66…\n$ pop       <int> 8425333, 1282697, 9279525, 4232095, 17876956, 8691…\n$ gdpPercap <dbl> 779.4453, 1601.0561, 2449.0082, 3520.6103, 5911.31…\n\nView(gapminder)\ngapminder  %>%  arrange(year) %>%  glimpse()\n\n\nRows: 1,704\nColumns: 6\n$ country   <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"Ar…\n$ continent <fct> Asia, Europe, Africa, Africa, Americas, Oceania, E…\n$ year      <int> 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 19…\n$ lifeExp   <dbl> 28.801, 55.230, 43.077, 30.015, 62.485, 69.120, 66…\n$ pop       <int> 8425333, 1282697, 9279525, 4232095, 17876956, 8691…\n$ gdpPercap <dbl> 779.4453, 1601.0561, 2449.0082, 3520.6103, 5911.31…\n\ngapminder %>%  arrange(desc(year)) %>%  glimpse()\n\n\nRows: 1,704\nColumns: 6\n$ country   <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"Ar…\n$ continent <fct> Asia, Europe, Africa, Africa, Americas, Oceania, E…\n$ year      <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 20…\n$ lifeExp   <dbl> 43.828, 76.423, 72.301, 42.731, 75.320, 81.235, 79…\n$ pop       <int> 31889923, 3600523, 33333216, 12420476, 40301927, 2…\n$ gdpPercap <dbl> 974.5803, 5937.0295, 6223.3675, 4797.2313, 12779.3…\n\nSummarize & aggregate 1\nsuppose you want to see the average gdp per capita of each continent as a data frame.\n\n\ngapminder %>% group_by(continent, year) %>% glimpse()\n\n\nRows: 1,704\nColumns: 6\nGroups: continent, year [60]\n$ country   <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"Ar…\n$ continent <fct> Asia, Europe, Africa, Africa, Americas, Oceania, E…\n$ year      <int> 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 19…\n$ lifeExp   <dbl> 28.801, 55.230, 43.077, 30.015, 62.485, 69.120, 66…\n$ pop       <int> 8425333, 1282697, 9279525, 4232095, 17876956, 8691…\n$ gdpPercap <dbl> 779.4453, 1601.0561, 2449.0082, 3520.6103, 5911.31…\n\ngapminder %>% group_by(continent, year) %>% summarise(meangdp = mean(gdpPercap, na.rm = TRUE)) %>%  print()\n\n\n# A tibble: 60 x 3\n# Groups:   continent [5]\n   continent  year meangdp\n   <fct>     <int>   <dbl>\n 1 Africa     1952   1253.\n 2 Africa     1957   1385.\n 3 Africa     1962   1598.\n 4 Africa     1967   2050.\n 5 Africa     1972   2340.\n 6 Africa     1977   2586.\n 7 Africa     1982   2482.\n 8 Africa     1987   2283.\n 9 Africa     1992   2282.\n10 Africa     1997   2379.\n# … with 50 more rows\n\nsummarize 2\nHow do we change this into a data frame?\nUse the assign operator.\n\n\nnew <- gapminder %>% group_by(continent, year) %>%\n  summarise(meangdp = mean(gdpPercap, na.rm = TRUE)) %>% print()\n\n\n# A tibble: 60 x 3\n# Groups:   continent [5]\n   continent  year meangdp\n   <fct>     <int>   <dbl>\n 1 Africa     1952   1253.\n 2 Africa     1957   1385.\n 3 Africa     1962   1598.\n 4 Africa     1967   2050.\n 5 Africa     1972   2340.\n 6 Africa     1977   2586.\n 7 Africa     1982   2482.\n 8 Africa     1987   2283.\n 9 Africa     1992   2282.\n10 Africa     1997   2379.\n# … with 50 more rows\n\nnew\n\n\n# A tibble: 60 x 3\n# Groups:   continent [5]\n   continent  year meangdp\n   <fct>     <int>   <dbl>\n 1 Africa     1952   1253.\n 2 Africa     1957   1385.\n 3 Africa     1962   1598.\n 4 Africa     1967   2050.\n 5 Africa     1972   2340.\n 6 Africa     1977   2586.\n 7 Africa     1982   2482.\n 8 Africa     1987   2283.\n 9 Africa     1992   2282.\n10 Africa     1997   2379.\n# … with 50 more rows\n\n\nSummarize 3 | some other functions\nHow many unique countries does the data contain by continent?\n\n\ngapminder %>%\ngroup_by(continent) %>%\nsummarize(n_obs = n(), n_countries = n_distinct(country)) %>%  print()\n\n\n# A tibble: 5 x 3\n  continent n_obs n_countries\n  <fct>     <int>       <int>\n1 Africa      624          52\n2 Americas    300          25\n3 Asia        396          33\n4 Europe      360          30\n5 Oceania      24           2\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-05-12T10:48:00+05:30",
    "input_file": {}
  },
  {
    "path": "posts/2021-06-23-plotting-with-ggplot2-part1/",
    "title": "Plotting with ggplot2 part1",
    "description": "The basics of ggplot library for data visualization in r",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-06-23",
    "categories": [
      "Rstats",
      "Tidyverse"
    ],
    "contents": "\nWhat is ggplot and why you need it ?\nggplot is one of the biggest trump cards of tidyverse that along with tidyr, dplyr, and other packages, provides the perfect tool to complete your data science workflow. ggplot allows you to build simple graphs and create layers that stack one on top of the other, to create more complicated and interesting visualizations. for data science teams that use MS Excel or other point and click interfaces to generate graphs and data visualizations, ggplot offers the perfect way to optimize the workflow and reduce the redundancy in data workflows. If you have to create the same graph every month based on updated data, ggplot(r, python or any other data science based programming approaches)\nThe basic structure of a ggplot\nYou can do a lot of things with ggplot. ggplot follows thae grammar of graphics, hence there is a logic behind everything and if you get the underlying logc, you can create any plot you want (Wickham 2016). At the base of everything lies the aesthetic mapping. which is basically the framework for the plot. The aes() argument tells the ggplot engine, where to look for the x or y variables, and the grouping variables. The next argument that we get is the “geom” , which defines the type of the plot you are looking for. It stands to reason that each geom should have a aesthetic mapped to it. In case you see a geom, where no aesthetic has been specified, it means that this geom inherits the aesthetic mapping from the base plot. If you want to create a basic plot, you should be ok with only mapping the aes and the geom argument. On the other hand, if you are looking to create something very specific the next set of functions will be helpful.\n\n\n#ggplot2::ggplot(data, aes(x = iv, y = dv, fill = category)) + geom_line()\nplot<- mtcars |>\n  ggplot(aes(x = gear, y = mpg)) # you can see that this creates nothing but it creates the canvas for your plot\nplot <- plot + \n  geom_col() # so when we add the geom_col() argument we get the plot\nplot\n\n\n\n\nLegend and axis titles\nThe plot that we created in the previous section, works if you are in a hurry. But if you want to show-off your visualization skills to peers, then you will probably need to beautify the plot a bit. First and foremost, we need to edit the axis, title and the labels so that they look clean. For that we can use the “labs” function to specify the title, x and y axis names, you can also specify the legend title by adding the same to your “labs” function.\n\n\n\nGrouping variables\nIn a traditional plot, you can have one or two variables, which you can define using the ‘aes’ function. What happens when you have a couple more grouping variables and your data is nested within the same. Take the case of the mtcars dataset. If you are happy with just plotting the mpg of cars with different gears, that’s fine. Or you can also explore if the number of cylinders has a role to play in the fuel efficiency figures. There are a couple of ways of going about it. The first way is to add a grouping variable in the aesthetics argument.\n\n\n\nIf you do not like the stacked bar chart, you can use the position = “dodge” argument to create a multiple bar chart\n\n\n\nColouring your plots\nYou can select colours for your plots. Colours are essential to communicate your visualization effectively. “scale_fill” is the group of commands you need to master, if you are looking to get soem control over the color palette of the graph. You can also specify the colour of your plot within each of the geom arguments.\n\n\n\nCompare stats with ggpubr\nSet up themes\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer. https://ggplot2.tidyverse.org.\n\n\n\n\n",
    "preview": "posts/2021-06-23-plotting-with-ggplot2-part1/plotting-with-ggplot2-part1_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2022-05-12T10:48:00+05:30",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-06-22-advantages-of-r-for-data-science/",
    "title": "Advantages of R for data science",
    "description": "Why all data science teams use R, and why you should too",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-06-22",
    "categories": [
      "Rstats",
      "Tidyverse"
    ],
    "contents": "\n\nContents\nWhy R?\nData science and analytics\n\n\nWhy R?\nFor most people in academia, R is nothing new. However for programmers and computer science graduates, who feel more comfortable with python and other programming languages. Like in every field of work, academicians also require some basic toolsets to hone their skills. These tools not only help them work more efficiently but also allow room for collaboration. In the twentyfirst century, academicians need to have some working knowledge of the command line along with proficiency in R, Latex, and Python. Latex has been a staple formatting and documenting language for academcians for more than three decades. However, with the advent of rmarkdown and packages such as bookdown, packagedown, there is a tangible shift happening in that area. Moreover, Latex is proficient in creating pdfs but the world has moved on from pdf to html and web interfaces and this is where R shines.\nSo if you care about sharing your work with your peers and funding agencies, it will make sense to learn a bit of R.\nData science and analytics\nThere is a difference between data science and data analytics. And there is this twilight zone where all of them intersect. If you look at any modern data science team, you are likely to find a group of language agnostic people who are just as comfortable at using R or python as creating custom macros on MS excel. Truth is, nowadays, data science teams are no longer stuck in the back offices, they are part of the decision-making processes at all levels of functioning of an enterprise. Hence they need to have the necessary tools to understand and address interfacing issues across all departments of the organization\n\n\n\n",
    "preview": {},
    "last_modified": "2022-05-12T10:48:00+05:30",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome",
    "description": "Welcome to our new blog, on data science. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-06-22",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-05-12T10:48:00+05:30",
    "input_file": {}
  }
]
