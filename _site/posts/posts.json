[
  {
    "path": "posts/2021-06-29-lets-talk-animal-welfare/",
    "title": "Let's talk animal welfare",
    "description": "Some thoughts about the animal-welfare challenges plaguing the zoo industry",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-06-29",
    "categories": [
      "animal welfare",
      "Science",
      "zoo biology"
    ],
    "contents": "\n\nContents\nAnimal welfare\nAnimal-human interactions at zoos\nAnimal-human interaction at zoos\n\n\n\n\n\n\n\n\nFigure 1: Asiatic lion at the biggest ex-situ conservation breeding center\n\n\n\nAnimal welfare\nWelfare is defined by broom as the state of the animal as it tries to cope with its environment. Therefore animal welfare can be seen as the animal tries to adjust to changes in its internal and external.\nAnimal-human interactions at zoos\nI am a animal behaviour biologist, and I have worked for a over a decade at zoos all over India. For my doctoral thesis, I investigated the role of incumbent husbandry protocols, enclosure design and management practices on the welfare of Asiatic lions at the world’s largest conservation breeding centre for the species. Suffice to say that I have some street-cred when it comes to zoos. Despite working for the larger part of my professional academic career at zoos and conservation breeding centres and observing animals, I often find hard to grapple with the concept of zoos in the twenty-first century.\nThe reason is quite simple, zoos at the very basic level are there for the sake of visitors. If the visitors stoppped coming to the zoos tomorrow, there will be no more zoos. Thankfully the same cannot be said about National parks and wildlife sanctuaries. I think it is very apparent that the primary beneficiary of the zoo is the public and not the animals. And yet zoos try to rebrand themselves as ambassadors of conservation, while conveniently forgiving themselves for past indiscretions. If there ever was a single institution that had committed more crimes towards biodiversity and individual animals, zoos would be upper quartile of the top ten miscreants.\nAnimal-human interaction at zoos\nI have published some papers before (Goswami et al. 2020). The first paper published in 2020, talks about how under similar husbandry conditions, animals can have different welfare outcomes. Which brings us to the point about addressing individual variations in zoo-animals and designing husbandry practices to mitigate negative outcomes. In the second paper, we took a more proactive approach and provided some insights on how to improve welfare across different personality types(Goswami et al. 2021). We found that a combined enrichment strategy, viz., wherein several types of enrichment devices are mixed together and targeted to encourage expression of species-typical behaviour patterns. We found that such enrichment interventions when integrated with daily husbandry practices are effective in providing excellent welfare outcomes for all animals. Subjects were found using the enclosure space more consistently and evenly., and suing exploratory behaviours to seek enrichment objects. Even after removing the positive reinforcement, animals kept engaging with the enrichment devices. We found that social play increased among animals. There were some agonistic interactions in the initial stages, which was quickly mitigated by providing enough enrichment devices for all animals housed in an enclosure.\n\n\n\nFigure 2: Asiatic lions interacting with enrichment devices\n\n\n\nWe also found that animals housed in low-complexity enclosures were more likely to suffer premature consequences of poor welfare. Comparatively animals that were housed in complex and large enclosures that afforded them a larger number of withdrawal spaces were more likely to have behaviour welfare indices similar to animals housed in complex enclosures without any visitors. Therefore by providing a complex and large enclosure we can offset the deleterious impacts of visitor disturbance. During our study we also found that Asiatic lions chose to stay as far away as possible from visitors whenever possible.\nSeveral published studies show that close proximity of visitors to captive animals at zoos can have negative\nStudies on welfare impacts of human-animal interaction\nSl no\nTitle\nSpecies\nAuthors\nsample size\nVisitor effect\n1.\nBehaviour and welfare: the visitor effect in captive felids\nFelids\nSuárez, Recuerda, and Arias-de-Reyna (2017)\nNA\nNegative\n2.\nCan Zoos Ever Be Big Enough for Large Wild Animals? A Review Using an Expert Panel Assessment of the Psychological Priorities of the Amur Tiger (*Panthera tigris altaica*) as a Model Species\nAmur tiger\nVeasey (2020)\nNA\nNegative\n3.\nEnvironmental influences on stereotypy and the activity budget of Indian leopards (*Panthera pardus*) in four zoos in Southern India\nLeopard(Panthera leo pardus)\nMallapur, Sinha, and Waran (2005)\nNA\nNegative\n4.\nThe effects of intrinsic enrichment on captive felids\nFelids\nDamasceno et al. (2017)\nNA\nNegative\n5.\nEnvironmental effects on the behavior of zoo-housed lions and tigers, with a case study on the effects of a visual barrier on pacing\nFelids\nBashaw et al. (2007)\nNA\nNegative\n6.\nThe effects of visitor density and intensity on the behaviour of two captive jaguars(Panthera onca).\nFelids\nSellinger and Ha (2005)\nNA\nNegative\n7.\nA case study: The effect of visitors on two captive pumas with respect to the time of the day\nFelids\n\nNA\nNegative\n\n\n\nBashaw, Meredith J., Angela S. Kelling, Mollie A. Bloomsmith, and Terry L. Maple. 2007. “Environmental Effects on the Behavior of Zoo-Housed Lions and Tigers, with a Case Study of the Effects of a Visual Barrier on Pacing.” Journal of Applied Animal Welfare Science 10 (2): 95–109. https://doi.org/cxk77g.\n\n\nDamasceno, Juliana, Gelson Genaro, Thomas Quirke, Shannen McCarthy, Sean McKeown, and Ruth O’Riordan. 2017. “The Effects of Intrinsic Enrichment on Captive Felids.” Zoo Biology 36 (3): 186–92.\n\n\nGoswami, Sitendu, Shiv Kumari Patel, Riyaz Kadivar, Praveen Chandra Tyagi, Pradeep Kumar Malik, and Samrat Mondol. 2021. “Effects of a Combined Enrichment Intervention on the Behavioural and Physiological Welfare of Captive Asiatic Lions (Panthera Leo Persica).” Applied Animal Behaviour Science 236: 105222. https://doi.org/gjq5dv.\n\n\nGoswami, Sitendu, Praveen C. Tyagi, Pradeep K. Malik, Shwetank J. Pandit, Riyazahmed F. Kadivar, Malcolm Fitzpatrick, and Samrat Mondol. 2020. “Effects of Personality and Rearing-History on the Welfare of Captive Asiatic Lions (Panthera Leo Persica).” PeerJ 8 (February): e8425. https://doi.org/10.7717/peerj.8425.\n\n\nMallapur, Avanti, Anindya Sinha, and Natalie Waran. 2005. “Influence of Visitor Presence on the Behaviour of Captive Lion-Tailed Macaques (Macaca Silenus) Housed in Indian Zoos.” Applied Animal Behaviour Science 94 (3-4): 341–52. https://doi.org/dg295b.\n\n\nSellinger, Rebecca L., and James C. Ha. 2005. “The Effects of Visitor Density and Intensity on the Behavior of Two Captive Jaguars (Panthera Onca).” Journal of Applied Animal Welfare Science 8 (4): 233–44. https://doi.org/c6pkjm.\n\n\nSuárez, P., P. Recuerda, and L. Arias-de-Reyna. 2017. “Behaviour and Welfare: The Visitor Effect in Captive Felids.” Animal Welfare 26 (1): 25–34.\n\n\nVeasey, Jake Stuart. 2020. “Can Zoos Ever Be Big Enough for Large Wild Animals? A Review Using an Expert Panel Assessment of the Psychological Priorities of the Amur Tiger (Panthera Tigris Altaica) as a Model Species.” Animals : An Open Access Journal from MDPI. https://doi.org/gh55dr.\n\n\n\n\n",
    "preview": "posts/2021-06-29-lets-talk-animal-welfare/distill-preview.png",
    "last_modified": "2021-07-12T18:40:55+05:30",
    "input_file": {},
    "preview_width": 1920,
    "preview_height": 1440
  },
  {
    "path": "posts/2021-06-23-data-wranglng-with-r/",
    "title": "Data wrangling with dplyr",
    "description": "Tidyverse suit of packages for R provide some nifty solutions to clean and arrange your data",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-06-23",
    "categories": [
      "Rstats",
      "Tidyverse"
    ],
    "contents": "\n\nContents\nIntroduction\nBasic components of a R syntax -\nData types in R (Nouns)\nArithmetic operators\nExercise for arithmetic operators\nAssignment operators\nExercise for assignment operators\nRelational operators\nExercise for relational operators\nLogical operators\nExercise for Logical operators\nMiscellaneous operators\nExercise for miscellaneous operators\nData wrangling in R\nThe endless scope and opportunities\n\nTopics\nPipe operators\nPipe operators cont..\nPipe operators help you read and write code from left to right\nWhat to do to understand your data?\nSummarize your data\nglimpse function\nTable function\nChange the class of a variable.\nSelect\nExercise\nRenaming variables\nArranging variables\nSummarize & aggregate 1\nsummarize 2\nSummarize 3 | some other functions\n\n\nIntroduction\nData science as a discipline finds it’s applications across all fields of knowledge. If you are from biological sciences, the amount of statistics in most of the papers, is a testament to this collusion. However statistics and data-science are not the same. You can perform statistical analysis with your calculator, MS Excel or other software.\n\n\nlibrary(tidyverse)\n#install.packages(\"magrittr\")\nlibrary(magrittr)\nlibrary(gapminder)\ngapminder <- as_tibble(gapminder)\ngapminder2 <-  gapminder\ngapminder3 <- gapminder\n\n\n\nBasic components of a R syntax -\nAll programming languages at their very cores, are basically a communication platform between the user and the computer. Since computers understand the binary language, programming languages act as the translating tools which have specific synatx and granmar that help us effectively communicate with our computers and tell it what we want to do. Most programming languages like R have strict grammar that needs to be followed to ensure that the computer understands our commands. Therefore, before embarking on the data science journey we need to understand the rules of communication. At the very base of any sentence is a grammar that includes nouns, verbs, adjectives and punctuation. In the case of R, we can translate these as the following.\nNoun = data\nVerb = function\nOperator = punctuation\nData types in R (Nouns)\nR is a language that can handle a multitude of data types. Data can be single dataframes, vectors, lists or matrices.\n - character: “a”, “swc”  - numeric: 2, 15.5  - integer: 2L (the L tells R to store this as an integer)  - logical: TRUE, FALSE  - complex: 1+4i\nclass: left ## Exercise Data types - class() - what kind of object is it (high-level)? - types() - what is the object’s data type (low-level)? - length() - how long is it? What about two dimensional objects? - attributes() - does it have any metadata?\n\n\nclass(gapminder)\n\n\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n\ntypeof(gapminder$country)\n\n\n[1] \"integer\"\n\nlength(gapminder$continent)\n\n\n[1] 1704\n\nattributes(gapminder$continent)\n\n\n$levels\n[1] \"Africa\"   \"Americas\" \"Asia\"     \"Europe\"   \"Oceania\" \n\n$class\n[1] \"factor\"\n\nclass: left ## Data structures in R There are three major types of Data Structures - Vector - single dimension - Matrix - two dimensional - Array- n-dimensional\n\n\na <- c(1:54)\nclass(a)\n\n\n[1] \"integer\"\n\nclass: left ## Operators in R\nOperators are used to define relationships between variables in R.\nOperators are like punctuations in a sentence.\nDifferent types of operators \nArithmetic \nLogical \nAssignment \nRelation \nMiscellaneous\n\nArithmetic operators\n\nOperator\nDescription\n+\nAddition of two operands\n-\nsubtraction of b from a\n*\nMultiplication\n/\nDivision of a by b\n%%\nRemainder from division of a with b\n%/%\nquotient from division of a and b\n^\na to the power of b\nExercise for arithmetic operators\n\n\n#find the quotient for  23456789 /15432\n23456789 %/% 15432\n\n\n[1] 1520\n\n\n\n# R follows BODMAS rule\n ((12345 + 456789) * (987456/2345678)^212) / 1234568\n\n\n[1] 8.330017e-81\n\nAssignment operators\nOperator\nDescription\n=\nAssigns right side value to left side operand\n<-\nAssigns right side value to left side operand\n->\nAssigns left side value to right side operand\n<<-\nAssigns right side value to left side operand\n->>\nAssigns left side value to right side operand\nExercise for assignment operators\n\n\n# R Operators - R Assignment Operators\na = 2\nprint ( a )\n\n\n[1] 2\n\na <- TRUE\nprint ( a )\n\n\n[1] TRUE\n\n454 -> a\nprint ( a )\n\n\n[1] 454\n\na <<- 2.9\nprint ( a )\n\n\n[1] 2.9\n\nc(6, 8, 9) -> a\nprint ( a )\n\n\n[1] 6 8 9\n\nRelational operators\nOperator\nDescription\n<\nIs first operand less than second operand\n“>”\nIs first operand greater than second operand\n==\nIs first operand equal to second operand\n<=\nIs first operand less than or equal to second operand\n“>=”\nIs first operand greater than or equal to second operand\n“!=”\nIs first operand not equal to second operand\nExercise for relational operators\n\n\na <- 7.5\nb <- 2\nprint( a < b ) # less than\n\n\n[1] FALSE\n\nprint( a > b ) # greater than\n\n\n[1] TRUE\n\nprint( a == b ) # equal to\n\n\n[1] FALSE\n\nprint( a <= b ) # less than or equal to\n\n\n[1] FALSE\n\nprint( a >= b ) # greater than or equal to\n\n\n[1] TRUE\n\nprint( a != b ) # not equal to\n\n\n[1] TRUE\n\nLogical operators\nOperator\nDescription\n&\nElement wise logical AND operation\n?|\nElement wise logical OR operation\n!\nElement wise logical NOT operation.\n&&\nOperand wise logical AND operation.\n| |\nOperand wise logical OR operation.\nExercise for Logical operators\n\n\n# R Operators - R Logical Operators Example for basic logical elements\n \na <- 12 # logical FALSE\nb <- 2 # logical TRUE\n \nprint ( a > 5 & a < 15 ) # logical AND element wise\n\n\n[1] TRUE\n\nprint ( TRUE & FALSE )\n\n\n[1] FALSE\n\nprint ( TRUE | FALSE ) # logical OR element wise\n\n\n[1] TRUE\n\nprint ( !a ) # logical NOT element wise\n\n\n[1] FALSE\n\nprint ( a && b ) # logical AND consolidated for all elements\n\n\n[1] TRUE\n\nprint ( a || b ) # logical OR consolidated for all elements\n\n\n[1] TRUE\n\nMiscellaneous operators\nOperator\nDescription\n%>%\npipe operator\n%in%\nIdentifies if an element(a) belongs to a vector(b)\n:\ncreates series of vectors from left to right\nExercise for miscellaneous operators\n\n\nst <- c(1:234) # create a vector with values from 1 to 234\n# R Operators - R Misc Operators\nprint ( a )\n\n\n[1] 12\n\na = c(25, 27, 76)\nb = 27\nprint( b %in% a ) # check if b is present within a\n\n\n[1] TRUE\n\nprint(a %in% b)\n\n\n[1] FALSE  TRUE FALSE\n\na = gapminder$country\nb = \"Afghanistan\"\nc = \"Congo\"\nprint(c %in% a)\n\n\n[1] FALSE\n\nprint(b %in% a)\n\n\n[1] TRUE\n\nnames(gapminder)\n\n\n[1] \"country\"   \"continent\" \"year\"      \"lifeExp\"   \"pop\"      \n[6] \"gdpPercap\"\n\ngapminder$continent %>% summary()# prints a summary of the factor gapminder$country\n\n\n  Africa Americas     Asia   Europe  Oceania \n     624      300      396      360       24 \n\nData wrangling in R\nThe endless scope and opportunities\nFast\nfilter and subset variables faster than Excel users\n\nReproducible\nOnce you have done it, you can do it again with minimal effort-\nReduces error\nyou can correct a mistake by reading the code\nYou can go back to your original data like nothing happened\n\nTopics\nPipe operators\nSelect\nFilter\nArrange\nMutate\nJoining data\nPivot functions\nPipe operators\n%>% ( ctrl + shift + m)\nit takes whatever is present on the left and uses it to define the function written on the right.\ntraditional R language is read inwards to outwards i.e function 4 (function3(function2(function1(data))))\nPipe operators cont..\n\n\n#example \n#library(gapminder)\n#library(tidyverse)\n\n\n\nPipe operators help you read and write code from left to right\ndata %>% function1 () %>% function(2) %>% function3() %>% function4()\n\n\n#example \n\n\n\n\n\n#library(gapminder)\ngapminder1 <- tbl_df(gapminder)\ngapminder1\n\n\n# A tibble: 1,704 x 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\nWhat to do to understand your data?\n\n\nnames(gapminder)\n\n\n[1] \"country\"   \"continent\" \"year\"      \"lifeExp\"   \"pop\"      \n[6] \"gdpPercap\"\n\n\n\nstr(gapminder)# investigate the structcure of the dataset\n\n\ntibble [1,704 × 6] (S3: tbl_df/tbl/data.frame)\n $ country  : Factor w/ 142 levels \"Afghanistan\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ continent: Factor w/ 5 levels \"Africa\",\"Americas\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ year     : int [1:1704] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...\n $ lifeExp  : num [1:1704] 28.8 30.3 32 34 36.1 ...\n $ pop      : int [1:1704] 8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...\n $ gdpPercap: num [1:1704] 779 821 853 836 740 ...\n\nSummarize your data\n\n\nsummary(gapminder)\n\n\n        country        continent        year         lifeExp     \n Afghanistan:  12   Africa  :624   Min.   :1952   Min.   :23.60  \n Albania    :  12   Americas:300   1st Qu.:1966   1st Qu.:48.20  \n Algeria    :  12   Asia    :396   Median :1980   Median :60.71  \n Angola     :  12   Europe  :360   Mean   :1980   Mean   :59.47  \n Argentina  :  12   Oceania : 24   3rd Qu.:1993   3rd Qu.:70.85  \n Australia  :  12                  Max.   :2007   Max.   :82.60  \n (Other)    :1632                                                \n      pop              gdpPercap       \n Min.   :6.001e+04   Min.   :   241.2  \n 1st Qu.:2.794e+06   1st Qu.:  1202.1  \n Median :7.024e+06   Median :  3531.8  \n Mean   :2.960e+07   Mean   :  7215.3  \n 3rd Qu.:1.959e+07   3rd Qu.:  9325.5  \n Max.   :1.319e+09   Max.   :113523.1  \n                                       \n\nView(gapminder)\n\n\n\nglimpse function\n\n\nglimpse(gapminder) # from here you can check the class of each variable as well\n\n\nRows: 1,704\nColumns: 6\n$ country   <fct> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afgh…\n$ continent <fct> Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, As…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ lifeExp   <dbl> 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39…\n$ pop       <int> 8425333, 9240934, 10267083, 11537966, 13079460, 14…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\nTable function\n\n\ntable(gapminder$country)# count the number of times \n\n\n\n             Afghanistan                  Albania \n                      12                       12 \n                 Algeria                   Angola \n                      12                       12 \n               Argentina                Australia \n                      12                       12 \n                 Austria                  Bahrain \n                      12                       12 \n              Bangladesh                  Belgium \n                      12                       12 \n                   Benin                  Bolivia \n                      12                       12 \n  Bosnia and Herzegovina                 Botswana \n                      12                       12 \n                  Brazil                 Bulgaria \n                      12                       12 \n            Burkina Faso                  Burundi \n                      12                       12 \n                Cambodia                 Cameroon \n                      12                       12 \n                  Canada Central African Republic \n                      12                       12 \n                    Chad                    Chile \n                      12                       12 \n                   China                 Colombia \n                      12                       12 \n                 Comoros         Congo, Dem. Rep. \n                      12                       12 \n             Congo, Rep.               Costa Rica \n                      12                       12 \n           Cote d'Ivoire                  Croatia \n                      12                       12 \n                    Cuba           Czech Republic \n                      12                       12 \n                 Denmark                 Djibouti \n                      12                       12 \n      Dominican Republic                  Ecuador \n                      12                       12 \n                   Egypt              El Salvador \n                      12                       12 \n       Equatorial Guinea                  Eritrea \n                      12                       12 \n                Ethiopia                  Finland \n                      12                       12 \n                  France                    Gabon \n                      12                       12 \n                  Gambia                  Germany \n                      12                       12 \n                   Ghana                   Greece \n                      12                       12 \n               Guatemala                   Guinea \n                      12                       12 \n           Guinea-Bissau                    Haiti \n                      12                       12 \n                Honduras         Hong Kong, China \n                      12                       12 \n                 Hungary                  Iceland \n                      12                       12 \n                   India                Indonesia \n                      12                       12 \n                    Iran                     Iraq \n                      12                       12 \n                 Ireland                   Israel \n                      12                       12 \n                   Italy                  Jamaica \n                      12                       12 \n                   Japan                   Jordan \n                      12                       12 \n                   Kenya         Korea, Dem. Rep. \n                      12                       12 \n             Korea, Rep.                   Kuwait \n                      12                       12 \n                 Lebanon                  Lesotho \n                      12                       12 \n                 Liberia                    Libya \n                      12                       12 \n              Madagascar                   Malawi \n                      12                       12 \n                Malaysia                     Mali \n                      12                       12 \n              Mauritania                Mauritius \n                      12                       12 \n                  Mexico                 Mongolia \n                      12                       12 \n              Montenegro                  Morocco \n                      12                       12 \n              Mozambique                  Myanmar \n                      12                       12 \n                 Namibia                    Nepal \n                      12                       12 \n             Netherlands              New Zealand \n                      12                       12 \n               Nicaragua                    Niger \n                      12                       12 \n                 Nigeria                   Norway \n                      12                       12 \n                    Oman                 Pakistan \n                      12                       12 \n                  Panama                 Paraguay \n                      12                       12 \n                    Peru              Philippines \n                      12                       12 \n                  Poland                 Portugal \n                      12                       12 \n             Puerto Rico                  Reunion \n                      12                       12 \n                 Romania                   Rwanda \n                      12                       12 \n   Sao Tome and Principe             Saudi Arabia \n                      12                       12 \n                 Senegal                   Serbia \n                      12                       12 \n            Sierra Leone                Singapore \n                      12                       12 \n         Slovak Republic                 Slovenia \n                      12                       12 \n                 Somalia             South Africa \n                      12                       12 \n                   Spain                Sri Lanka \n                      12                       12 \n                   Sudan                Swaziland \n                      12                       12 \n                  Sweden              Switzerland \n                      12                       12 \n                   Syria                   Taiwan \n                      12                       12 \n                Tanzania                 Thailand \n                      12                       12 \n                    Togo      Trinidad and Tobago \n                      12                       12 \n                 Tunisia                   Turkey \n                      12                       12 \n                  Uganda           United Kingdom \n                      12                       12 \n           United States                  Uruguay \n                      12                       12 \n               Venezuela                  Vietnam \n                      12                       12 \n      West Bank and Gaza              Yemen, Rep. \n                      12                       12 \n                  Zambia                 Zimbabwe \n                      12                       12 \n\nChange the class of a variable.\n\n\nclass(gapminder$country)\n\n\n[1] \"factor\"\n\ngapminder$country <- as.character(gapminder$country)\n\n\n\nSelect\nyou have a dataset with lots of variables\nYou want to select only a few variables to work with\nYou can select a certain number of columns with this function\n\n\nglimpse(gapminder)\n\n\nRows: 1,704\nColumns: 6\n$ country   <chr> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afgh…\n$ continent <fct> Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, As…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ lifeExp   <dbl> 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39…\n$ pop       <int> 8425333, 9240934, 10267083, 11537966, 13079460, 14…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\ngapminder %>% select(continent:gdpPercap) %>% glimpse()\n\n\nRows: 1,704\nColumns: 5\n$ continent <fct> Asia, Asia, Asia, Asia, Asia, Asia, Asia, Asia, As…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ lifeExp   <dbl> 28.801, 30.332, 31.997, 34.020, 36.088, 38.438, 39…\n$ pop       <int> 8425333, 9240934, 10267083, 11537966, 13079460, 14…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\ngapminder1\n\n\n# A tibble: 1,704 x 6\n   country     continent  year lifeExp      pop gdpPercap\n   <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n 1 Afghanistan Asia       1952    28.8  8425333      779.\n 2 Afghanistan Asia       1957    30.3  9240934      821.\n 3 Afghanistan Asia       1962    32.0 10267083      853.\n 4 Afghanistan Asia       1967    34.0 11537966      836.\n 5 Afghanistan Asia       1972    36.1 13079460      740.\n 6 Afghanistan Asia       1977    38.4 14880372      786.\n 7 Afghanistan Asia       1982    39.9 12881816      978.\n 8 Afghanistan Asia       1987    40.8 13867957      852.\n 9 Afghanistan Asia       1992    41.7 16317921      649.\n10 Afghanistan Asia       1997    41.8 22227415      635.\n# … with 1,694 more rows\n\nExercise\nselect only columns “country” and “year”and “gdpPercap”\n\n\ngapminder %>%  select(c(country, year, gdpPercap)) %>%  glimpse()\n\n\nRows: 1,704\nColumns: 3\n$ country   <chr> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afgh…\n$ year      <int> 1952, 1957, 1962, 1967, 1972, 1977, 1982, 1987, 19…\n$ gdpPercap <dbl> 779.4453, 820.8530, 853.1007, 836.1971, 739.9811, …\n\ngapminder$year <- as.integer(gapminder$year)\n\nstr(gapminder)\n\n\ntibble [1,704 × 6] (S3: tbl_df/tbl/data.frame)\n $ country  : chr [1:1704] \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n $ continent: Factor w/ 5 levels \"Africa\",\"Americas\",..: 3 3 3 3 3 3 3 3 3 3 ...\n $ year     : int [1:1704] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...\n $ lifeExp  : num [1:1704] 28.8 30.3 32 34 36.1 ...\n $ pop      : int [1:1704] 8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...\n $ gdpPercap: num [1:1704] 779 821 853 836 740 ...\n\nRenaming variables\n\n\n#gapminder <-  rename(gapminder,c(gdp = \"gdp\"))\nnames(gapminder)\n\n\n[1] \"country\"   \"continent\" \"year\"      \"lifeExp\"   \"pop\"      \n[6] \"gdpPercap\"\n\nArranging variables\nThe arrange function helps you reorder the variables\n\n\nlibrary(gapminder)\ngapminder <- arrange(gapminder,(year))\nglimpse(gapminder)\n\n\nRows: 1,704\nColumns: 6\n$ country   <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"Ar…\n$ continent <fct> Asia, Europe, Africa, Africa, Americas, Oceania, E…\n$ year      <int> 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 19…\n$ lifeExp   <dbl> 28.801, 55.230, 43.077, 30.015, 62.485, 69.120, 66…\n$ pop       <int> 8425333, 1282697, 9279525, 4232095, 17876956, 8691…\n$ gdpPercap <dbl> 779.4453, 1601.0561, 2449.0082, 3520.6103, 5911.31…\n\nView(gapminder)\ngapminder  %>%  arrange(year) %>%  glimpse()\n\n\nRows: 1,704\nColumns: 6\n$ country   <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"Ar…\n$ continent <fct> Asia, Europe, Africa, Africa, Americas, Oceania, E…\n$ year      <int> 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 19…\n$ lifeExp   <dbl> 28.801, 55.230, 43.077, 30.015, 62.485, 69.120, 66…\n$ pop       <int> 8425333, 1282697, 9279525, 4232095, 17876956, 8691…\n$ gdpPercap <dbl> 779.4453, 1601.0561, 2449.0082, 3520.6103, 5911.31…\n\ngapminder %>%  arrange(desc(year)) %>%  glimpse()\n\n\nRows: 1,704\nColumns: 6\n$ country   <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"Ar…\n$ continent <fct> Asia, Europe, Africa, Africa, Americas, Oceania, E…\n$ year      <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 20…\n$ lifeExp   <dbl> 43.828, 76.423, 72.301, 42.731, 75.320, 81.235, 79…\n$ pop       <int> 31889923, 3600523, 33333216, 12420476, 40301927, 2…\n$ gdpPercap <dbl> 974.5803, 5937.0295, 6223.3675, 4797.2313, 12779.3…\n\nSummarize & aggregate 1\nsuppose you want to see the average gdp per capita of each continent as a data frame.\n\n\ngapminder %>% group_by(continent, year) %>% glimpse()\n\n\nRows: 1,704\nColumns: 6\nGroups: continent, year [60]\n$ country   <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Angola\", \"Ar…\n$ continent <fct> Asia, Europe, Africa, Africa, Americas, Oceania, E…\n$ year      <int> 1952, 1952, 1952, 1952, 1952, 1952, 1952, 1952, 19…\n$ lifeExp   <dbl> 28.801, 55.230, 43.077, 30.015, 62.485, 69.120, 66…\n$ pop       <int> 8425333, 1282697, 9279525, 4232095, 17876956, 8691…\n$ gdpPercap <dbl> 779.4453, 1601.0561, 2449.0082, 3520.6103, 5911.31…\n\ngapminder %>% group_by(continent, year) %>% summarise(meangdp = mean(gdpPercap, na.rm = TRUE)) %>%  print()\n\n\n# A tibble: 60 x 3\n# Groups:   continent [5]\n   continent  year meangdp\n   <fct>     <int>   <dbl>\n 1 Africa     1952   1253.\n 2 Africa     1957   1385.\n 3 Africa     1962   1598.\n 4 Africa     1967   2050.\n 5 Africa     1972   2340.\n 6 Africa     1977   2586.\n 7 Africa     1982   2482.\n 8 Africa     1987   2283.\n 9 Africa     1992   2282.\n10 Africa     1997   2379.\n# … with 50 more rows\n\nsummarize 2\nHow do we change this into a data frame?\nUse the assign operator.\n\n\nnew <- gapminder %>% group_by(continent, year) %>%\n  summarise(meangdp = mean(gdpPercap, na.rm = TRUE)) %>% print()\n\n\n# A tibble: 60 x 3\n# Groups:   continent [5]\n   continent  year meangdp\n   <fct>     <int>   <dbl>\n 1 Africa     1952   1253.\n 2 Africa     1957   1385.\n 3 Africa     1962   1598.\n 4 Africa     1967   2050.\n 5 Africa     1972   2340.\n 6 Africa     1977   2586.\n 7 Africa     1982   2482.\n 8 Africa     1987   2283.\n 9 Africa     1992   2282.\n10 Africa     1997   2379.\n# … with 50 more rows\n\nnew\n\n\n# A tibble: 60 x 3\n# Groups:   continent [5]\n   continent  year meangdp\n   <fct>     <int>   <dbl>\n 1 Africa     1952   1253.\n 2 Africa     1957   1385.\n 3 Africa     1962   1598.\n 4 Africa     1967   2050.\n 5 Africa     1972   2340.\n 6 Africa     1977   2586.\n 7 Africa     1982   2482.\n 8 Africa     1987   2283.\n 9 Africa     1992   2282.\n10 Africa     1997   2379.\n# … with 50 more rows\n\n\nSummarize 3 | some other functions\nHow many unique countries does the data contain by continent?\n\n\ngapminder %>%\ngroup_by(continent) %>%\nsummarize(n_obs = n(), n_countries = n_distinct(country)) %>%  print()\n\n\n# A tibble: 5 x 3\n  continent n_obs n_countries\n  <fct>     <int>       <int>\n1 Africa      624          52\n2 Americas    300          25\n3 Asia        396          33\n4 Europe      360          30\n5 Oceania      24           2\n\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-07-13T00:38:55+05:30",
    "input_file": {}
  },
  {
    "path": "posts/2021-06-23-plotting-with-ggplot2-part1/",
    "title": "Plotting with ggplot2 part1",
    "description": "The basics of ggplot library for data visualization in r",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-06-23",
    "categories": [
      "Rstats",
      "Tidyverse"
    ],
    "contents": "\nWhat is ggplot and why you need it ?\nggplot is one of the biggest trump cards of tidyverse that along with tidyr, dplyr, and other packages, provides the perfect tool to complete your data science workflow. ggplot allows you to build simple graphs and create layers that stack one on top of the other, to create more complicated and interesting visualizations. for data science teams that use MS Excel or other point and click interfaces to generate graphs and data visualizations, ggplot offers the perfect way to optimize the workflow and reduce the redundancy in data workflows. If you have to create the same graph every month based on updated data, ggplot(r, python or any other data science based programming approaches)\nThe basic structure of a ggplot\nYou can do a lot of things with ggplot. ggplot follows thae grammar of graphics, hence there is a logic behind everything and if you get the underlying logc, you can create any plot you want (Wickham 2016). At the base of everything lies the aesthetic mapping. which is basically the framework for the plot. The aes() argument tells the ggplot engine, where to look for the x or y variables, and the grouping variables. The next argument that we get is the “geom” , which defines the type of the plot you are looking for. It stands to reason that each geom should have a aesthetic mapped to it. In case you see a geom, where no aesthetic has been specified, it means that this geom inherits the aesthetic mapping from the base plot. If you want to create a basic plot, you should be ok with only mapping the aes and the geom argument. On the other hand, if you are looking to create something very specific the next set of functions will be helpful.\n\n\n#ggplot2::ggplot(data, aes(x = iv, y = dv, fill = category)) + geom_line()\nplot<- mtcars |>\n  ggplot(aes(x = gear, y = mpg)) # you can see that this creates nothing but it creates the canvas for your plot\nplot <- plot + \n  geom_col() # so when we add the geom_col() argument we get the plot\nplot\n\n\n\n\nLegend and axis titles\nThe plot that we created in the previous section, works if you are in a hurry. But if you want to show-off your visualization skills to peers, then you will probably need to beautify the plot a bit. First and foremost, we need to edit the axis, title and the labels so that they look clean. For that we can use the “labs” function to specify the title, x and y axis names, you can also specify the legend title by adding the same to your “labs” function.\n\n\n\nGrouping variables\nIn a traditional plot, you can have one or two variables, which you can define using the ‘aes’ function. What happens when you have a couple more grouping variables and your data is nested within the same. Take the case of the mtcars dataset. If you are happy with just plotting the mpg of cars with different gears, that’s fine. Or you can also explore if the number of cylinders has a role to play in the fuel efficiency figures. There are a couple of ways of going about it. The first way is to add a grouping variable in the aesthetics argument.\n\n\n\nIf you do not like the stacked bar chart, you can use the position = “dodge” argument to create a multiple bar chart\n\n\n\nColouring your plots\nYou can select colours for your plots. Colours are essential to communicate your visualization effectively. “scale_fill” is the group of commands you need to master, if you are looking to get soem control over the color palette of the graph. You can also specify the colour of your plot within each of the geom arguments.\n\n\n\nCompare stats with ggpubr\nSet up themes\n\n\n\nWickham, Hadley. 2016. Ggplot2: Elegant Graphics for Data Analysis. Springer. https://ggplot2.tidyverse.org.\n\n\n\n\n",
    "preview": "posts/2021-06-23-plotting-with-ggplot2-part1/plotting-with-ggplot2-part1_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2021-07-12T17:56:14+05:30",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2021-06-22-advantages-of-r-for-data-science/",
    "title": "Advantages of R for data science",
    "description": "Why all data science teams use R, and why you should too",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": {}
      }
    ],
    "date": "2021-06-22",
    "categories": [
      "Rstats",
      "Tidyverse"
    ],
    "contents": "\n\nContents\nWhy R?\nData science and analytics\n\n\nWhy R?\nFor most people in academia, R is nothing new. However for programmers and computer science graduates, who feel more comfortable with python and other programming languages. Like in every field of work, academicians also require some basic toolsets to hone their skills. These tools not only help them work more efficiently but also allow room for collaboration. In the twentyfirst century, academicians need to have some working knowledge of the command line along with proficiency in R, Latex, and Python. Latex has been a staple formatting and documenting language for academcians for more than three decades. However, with the advent of rmarkdown and packages such as bookdown, packagedown, there is a tangible shift happening in that area. Moreover, Latex is proficient in creating pdfs but the world has moved on from pdf to html and web interfaces and this is where R shines.\nSo if you care about sharing your work with your peers and funding agencies, it will make sense to learn a bit of R.\nData science and analytics\nThere is a difference between data science and data analytics. And there is this twilight zone where all of them intersect. If you look at any modern data science team, you are likely to find a group of language agnostic people who are just as comfortable at using R or python as creating custom macros on MS excel. Truth is, nowadays, data science teams are no longer stuck in the back offices, they are part of the decision-making processes at all levels of functioning of an enterprise. Hence they need to have the necessary tools to understand and address interfacing issues across all departments of the organization\n\n\n\n",
    "preview": {},
    "last_modified": "2021-07-13T00:22:43+05:30",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome",
    "description": "Welcome to our new blog, on data science. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Sitendu Goswami",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-06-22",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-07-12T17:58:27+05:30",
    "input_file": {}
  }
]
